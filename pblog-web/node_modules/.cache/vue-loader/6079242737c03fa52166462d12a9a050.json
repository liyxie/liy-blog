{"remainingRequest":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-web\\node_modules\\.store\\vue-loader@15.11.1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-web\\src\\views\\question\\Question.vue?vue&type=style&index=0&id=7f7e21e5&lang=stylus","dependencies":[{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-web\\src\\views\\question\\Question.vue","mtime":1721286706059},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-web\\node_modules\\.store\\css-loader@3.6.0\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-web\\node_modules\\.store\\vue-loader@15.11.1\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-web\\node_modules\\.store\\postcss-loader@3.0.0\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-web\\node_modules\\.store\\stylus-loader@3.0.2\\node_modules\\stylus-loader\\index.js","mtime":1519606876000},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-web\\node_modules\\.store\\cache-loader@4.1.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-web\\node_modules\\.store\\vue-loader@15.11.1\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci50eXBlZC1jdXJzb3IKICBvcGFjaXR5OiAxCiAgYW5pbWF0aW9uOiBibGluayAwLjdzIGluZmluaXRlCgpAa2V5ZnJhbWVzIGJsaW5rCiAgMCUKICAgIG9wYWNpdHk6IDEKICA1MCUKICAgIG9wYWNpdHk6IDAKICAxMDAlCiAgICBvcGFjaXR5OiAxCg=="},{"version":3,"sources":["Question.vue"],"names":[],"mappings":";AAifA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Question.vue","sourceRoot":"src/views/question","sourcesContent":["<template>\r\n  <div>\r\n<!--    <Loading></Loading>-->\r\n    <!-- banner -->\r\n    <div class=\"banner\" :style=\"cover\">\r\n      <div class=\"bgShade\">\r\n        <div class=\"banner-title\">\r\n          面试题\r\n          <div class=\"banner-intro\">\r\n            {{ obj.output }}<span class=\"typed-cursor\">|</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- 中间内容 -->\r\n    <v-row class=\"blog-container\">\r\n      <!--  左边问题分类目录   -->\r\n      <v-col md=\"2\" cols=\"12\">\r\n        <v-card class=\"side-container\">\r\n          <div class=\"side-title\">题目分类</div>\r\n          <div class=\"side-content\">\r\n            <el-menu\r\n            :default-active=\"cIndex.toString()\"\r\n            active-text-color=\"#5794F7\">\r\n            <el-menu-item\r\n              class=\"left-directory\"\r\n              v-for=\"(item, index) in categoryList\"\r\n              :key=\"item.id\"\r\n              @click=\"getQuestionList(item.id)\"\r\n              :index=\"index.toString()\">\r\n              {{ index + 1 + \"、\" + item.name }} ({{ item.questionNum }})\r\n            </el-menu-item>\r\n          </el-menu>\r\n          </div>\r\n        </v-card>\r\n      </v-col>\r\n      <!--   中间当前题目内容   -->\r\n      <v-col md=\"7\" cols=\"12\">\r\n        <v-card class=\"article-wrapper\">\r\n          <!--题目信息-->\r\n          <div style=\"overflow: hidden\">\r\n            <span class=\"mid-side-title\"><i class=\"num\">{{ curIndex + 1 }}</i>\r\n              {{ questionList[curIndex].quContent }}</span>\r\n\r\n            <span style=\"float: right;margin-right: 5px\">\r\n              <el-button\r\n                         @click=\"isFavorite\"\r\n                         v-if=\"!showFavorite\"\r\n                         style=\"border: none;padding: 10px 5px;font-size: 1.5rem\"\r\n                         class=\"animated swing\"\r\n                         icon=\"el-icon-star-off\" />\r\n\r\n              <el-button\r\n                         @click=\"isFavorite\"\r\n                         v-if=\"showFavorite\"\r\n                         style=\"border: none;padding: 10px 5px;font-size: 1.5rem\"\r\n                         class=\"animated swing\"\r\n                         type=\"warning\"\r\n                         icon=\"el-icon-star-off\" />\r\n\r\n          </span>\r\n            <el-divider />\r\n\r\n            <!-- 参考答案：  -->\r\n            <div class=\"mid-title\">参考答案</div>\r\n\r\n            <div\r\n              ref=\"analysis\"\r\n              class=\"analysis-content markdown-body\"\r\n              v-html=\"analysisContent\"\r\n            />\r\n\r\n            <div style=\"float: right;margin-top: 30px\">\r\n              <el-button type=\"primary\" :disabled=\"curIndex<1\" @click=\"getAnalysis(--curIndex)\">上一题</el-button>\r\n              <el-button type=\"primary\" :disabled=\"curIndex>=questionList.length-1\" @click=\"getAnalysis(++curIndex)\">下一题\r\n              </el-button>\r\n            </div>\r\n          </div>\r\n        </v-card>\r\n      </v-col>\r\n      <!--  右边问题目录   -->\r\n      <v-col md=\"3\" cols=\"12\" class=\"d-md-block d-none\">\r\n        <v-card class=\"side-container\">\r\n          <div class=\"side-title\">问题列表</div>\r\n          <div class=\"side-content\">\r\n            <el-menu\r\n            :default-active=\"curIndex.toString()\"\r\n            active-text-color=\"#5794F7\">\r\n            <el-menu-item\r\n              class=\"right-directory\"\r\n              v-for=\"(item, index) in questionList\" :key=\"item.id\"\r\n              @click=\"getAnalysis(curIndex = index)\"\r\n              :index=\"index.toString()\">\r\n              {{ index + 1 + \"、\" + item.quContent }}\r\n            </el-menu-item>\r\n          </el-menu>\r\n          </div>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Clipboard from \"clipboard\";\r\n  import EasyTyper from \"easy-typer-js\";\r\n  import { favoriteQuestion, getCategoryAndQuestionList } from \"../../api\";\r\n  import hljs from \"../../plugins/hightLight/index\";\r\n  // import Loading from \"@/components/loading/loading\";\r\n\r\n  export default {\r\n/*    components: {\r\n      Loading\r\n    },*/\r\n    created() {\r\n      this.getQuestionList();\r\n      this.changeHitokoto();\r\n    },\r\n    destroyed() {\r\n      this.clipboard.destroy();\r\n    },\r\n    metaInfo: {\r\n      meta: [{\r\n        name: \"keyWords\",\r\n        content: \"儒林小栈,开源博客,www.codescholar.cn\"  //变量或字符串\r\n      }, {\r\n        name: \"description\",\r\n        content: \"这是我的个人博客、会分享关于编程、写作、思考相关的任何内容，希望可以给来到这儿的人有些帮助...\"\r\n      }]\r\n    },\r\n    data: function() {\r\n      return {\r\n        showFavorite: false,\r\n        analysisContent: \"\",\r\n        // 从路由中获取问题id\r\n        qCategoryId: this.$route.params.qCategoryId,\r\n        // 从路由中获取问题id\r\n        questionId: this.$route.params.questionId,\r\n\r\n        // 题目索引\r\n        curIndex: 0,\r\n        // 分类索引\r\n        cIndex: 0,\r\n\r\n        // 查询到的问题列表\r\n        questionList: [\r\n          {\r\n            id: \"\",\r\n            quContent: \"\",\r\n            analysisMd: \"\"\r\n          }\r\n        ],\r\n        // 问题分类列表\r\n        categoryList: [],\r\n\r\n        img: process.env.VUE_APP_IMG_API,\r\n        clipboard: null,\r\n        imgList: [],\r\n        // 打字机特效配置变量\r\n        obj: {\r\n          output: \"\",\r\n          isEnd: false,\r\n          speed: 300,\r\n          singleBack: false,\r\n          sleep: 0,\r\n          type: \"rollback\",\r\n          backSpeed: 40,\r\n          sentencePause: true\r\n        }\r\n      };\r\n    },\r\n    methods: {\r\n      // 收藏方法\r\n      isFavorite() {\r\n        let fq = this.questionList[this.curIndex]\r\n        if (this.showFavorite) {\r\n          favoriteQuestion(fq.id, 0).then(res => {\r\n            fq.isFavorite = 0;\r\n            this.showFavorite = false;\r\n          }).catch(err => {\r\n            console.log(err)\r\n          })\r\n        } else if (!this.showFavorite) {\r\n          favoriteQuestion(this.questionList[this.curIndex].id, 1).then(res => {\r\n            fq.isFavorite = 1;\r\n            this.showFavorite = true;\r\n          }).catch(err => {\r\n            console.log(err)\r\n          })\r\n        }\r\n      },\r\n      // 获取分类和题目信息\r\n      getQuestionList(cid, qid) {\r\n        if (typeof (cid) === \"undefined\" && typeof (qid) === \"undefined\") {\r\n          cid = this.qCategoryId;\r\n          qid = this.questionId;\r\n        }\r\n\r\n        if (cid === null || cid === 0 || cid === \"\" || typeof (cid) === \"undefined\") {\r\n          cid = 1;\r\n        }\r\n\r\n        getCategoryAndQuestionList(cid).then(res => {\r\n          this.questionList = res.data.questionList;\r\n          this.categoryList = res.data.qCategoryList;\r\n\r\n          for (const index in this.categoryList) {\r\n            if (this.categoryList[index].id == cid) {\r\n              this.cIndex = parseInt(index);\r\n            }\r\n          }\r\n\r\n          if (qid !== null && qid !== 0 && qid !== \"\" && typeof (qid) !== \"undefined\") {\r\n            for (const index in this.questionList) {\r\n              if (this.questionList[index].id == qid) {\r\n                this.curIndex = parseInt(index);\r\n              }\r\n            }\r\n          } else {\r\n            this.curIndex = 0;\r\n          }\r\n          this.getAnalysis(this.curIndex);\r\n        });\r\n      },\r\n\r\n      getAnalysis(curIndex) {\r\n        const that = this;\r\n        if (that.questionList[curIndex].isFavorite === 1){\r\n          that.showFavorite = true;\r\n        } else {\r\n          that.showFavorite = false;\r\n        }\r\n        this.markdownToHtml(this.questionList[curIndex].analysisMd);\r\n        this.$nextTick(() => {\r\n          // 添加代码复制功能\r\n          this.clipboard = new Clipboard(\".copy-btn\");\r\n          this.clipboard.on(\"success\", () => {\r\n            this.$toast({ type: \"success\", message: \"复制成功\" });\r\n          });\r\n          // 添加图片预览功能\r\n          const imgList = this.$refs.analysis.getElementsByTagName(\"img\");\r\n          for (var i = 0; i < imgList.length; i++) {\r\n            this.imgList.push(imgList[i].src);\r\n            imgList[i].addEventListener(\"click\", function(e) {\r\n              that.previewImg(e.target.currentSrc);\r\n            });\r\n          }\r\n          // 回到顶部\r\n          document.documentElement.scrollTop = 200;\r\n        });\r\n      },\r\n\r\n      markdownToHtml(data) {\r\n        const MarkdownIt = require(\"markdown-it\");\r\n        const md = new MarkdownIt({\r\n          html: true,\r\n          linkify: true,\r\n          typographer: true,\r\n          highlight: function(str, lang) {\r\n            // 当前时间加随机数生成唯一的id标识\r\n            var d = new Date().getTime();\r\n            if (\r\n              window.performance &&\r\n              typeof window.performance.now === \"function\"\r\n            ) {\r\n              d += performance.now();\r\n            }\r\n            const codeIndex = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(\r\n              /[xy]/g,\r\n              function(c) {\r\n                var r = (d + Math.random() * 16) % 16 | 0;\r\n                d = Math.floor(d / 16);\r\n                return (c == \"x\" ? r : (r & 0x3) | 0x8).toString(16);\r\n              }\r\n            );\r\n            // 复制功能主要使用的是 clipboard.js\r\n            let html = `<button class=\"copy-btn iconfont iconfuzhi\" type=\"button\" data-clipboard-action=\"copy\" data-clipboard-target=\"#copy${codeIndex}\"></button>`;\r\n            const linesLength = str.split(/\\n/).length - 1;\r\n            // 生成行号\r\n            let linesNum = \"<span aria-hidden=\\\"true\\\" class=\\\"line-numbers-rows\\\">\";\r\n            for (let index = 0; index < linesLength; index++) {\r\n              linesNum = linesNum + \"<span></span>\";\r\n            }\r\n            linesNum += \"</span>\";\r\n            if (lang && hljs.getLanguage(lang)) {\r\n              // highlight.js 高亮代码\r\n              const preCode = hljs.highlight(lang, str, true).value;\r\n              html = html + preCode;\r\n              if (linesLength) {\r\n                html += \"<b class=\\\"name\\\">\" + lang + \"</b>\";\r\n              }\r\n              // 将代码包裹在 textarea 中，由于防止textarea渲染出现问题，这里将 \"<\" 用 \"<\" 代替，不影响复制功能\r\n              return `<pre class=\"hljs\"><code>${html}</code>${linesNum}</pre><textarea style=\"position: absolute;top: -9999px;left: -9999px;z-index: -9999;\" id=\"copy${codeIndex}\">${str.replace(\r\n                /<\\/textarea>/g,\r\n                \"</textarea>\"\r\n              )}</textarea>`;\r\n            }\r\n          }\r\n        });\r\n        // 将markdown替换为html标签\r\n        this.analysisContent = md.render(data);\r\n      },\r\n      previewImg(img) {\r\n        this.$imagePreview({\r\n          images: this.imgList,\r\n          index: this.imgList.indexOf(img)\r\n        });\r\n      },\r\n      changeHitokoto() {\r\n        // 加载一言名句 a 动画，b 漫画，c 游戏，d 文学，e 原创，f 来自网络，g 其他，h 影视，i 诗词，j 网易云，k 哲学，l 抖机灵\r\n        fetch(\"https://v1.hitokoto.cn?c=i&c=j&c=k&c=d\")\r\n          .then(res => {\r\n            return res.json();\r\n          })\r\n          .then(({ hitokoto }) => {\r\n            this.initTyped(hitokoto);\r\n          });\r\n      },\r\n      // 一言Api进行打字机循环输出效果  by  程序儒  2023年4月11日\r\n      initTyped(input, fn, hooks) {\r\n        const obj = this.obj;\r\n        const typed = new EasyTyper(obj, input, fn, hooks);\r\n      },\r\n      step(i) {\r\n        return \"index\" + i;\r\n      }\r\n    },\r\n    computed: {\r\n      cover() {\r\n        var cover = \"\";\r\n        this.$store.state.blogInfo.pageList.forEach(item => {\r\n          if (item.pageLabel === \"question\") {\r\n            cover = item.pageCover;\r\n          }\r\n        });\r\n        return \"background: url(\" + cover + \") center center / cover no-repeat\";\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n\r\n<style lang=\"stylus\">\r\n  .typed-cursor\r\n    opacity: 1\r\n    animation: blink 0.7s infinite\r\n\r\n  @keyframes blink\r\n    0%\r\n      opacity: 1\r\n    50%\r\n      opacity: 0\r\n    100%\r\n      opacity: 1\r\n</style>\r\n\r\n<style scoped>\r\n    /*  调整首图背景不透明度  by 程序儒  2023年4月11日  */\r\n    .bgShade {\r\n        background-color: rgba(0, 0, 0, 0.15);\r\n    }\r\n\r\n    /* 首图高度调节 */\r\n    .banner {\r\n        height: 200px;\r\n    }\r\n\r\n    /* 标题文字位置 */\r\n    .banner-title {\r\n        top: 4.5rem;\r\n    }\r\n\r\n    /* 一言文字格式调整 */\r\n    .banner-intro {\r\n        font-size: 1.5rem;\r\n        font-family: 'STXingkai', 'pgz', serif !important;\r\n        cursor: text;\r\n    }\r\n\r\n    /* 主区域样式 */\r\n    .blog-container {\r\n        max-width: 100%;\r\n        margin: 120px auto 40px auto;\r\n    }\r\n\r\n    /* 中间显示内容 */\r\n    .article-wrapper {\r\n        min-height: 80vh;\r\n    }\r\n\r\n    /*侧边栏样式*/\r\n    .side-container {\r\n        padding-top: 10px;\r\n        padding-left: 10px;\r\n        padding-bottom: 15px;\r\n        font-size: 17px;\r\n        /*吸顶，跟随主屏幕滚动*/\r\n        position: sticky !important;\r\n        top: 20px;\r\n    }\r\n\r\n    /* 数字标号样式 */\r\n    .num {\r\n        display: inline-block;\r\n        background: url('../../assets/imgs/examTitle.png') no-repeat 100% 100%;\r\n        background-size: contain;\r\n        height: 37px;\r\n        width: 37px;\r\n        line-height: 30px;\r\n        color: #fff;\r\n        font-size: 19px;\r\n        text-align: center;\r\n        margin-right: 15px;\r\n        vertical-align: middle;\r\n    }\r\n\r\n    /* 侧边栏标题 */\r\n    .side-title {\r\n        font-size: 2rem;\r\n        font-weight: 600;\r\n        margin: 5px 15px;\r\n        color: #5794F7;\r\n        font-family: 'STXingkai', 'pgz', serif !important;\r\n    }\r\n\r\n    /* 侧边栏内容 */\r\n    .side-content {\r\n        overflow: auto;\r\n        max-height: 80vh;\r\n    }\r\n\r\n    /* 参考答案 */\r\n    .mid-title {\r\n        font-size: 2rem;\r\n        font-weight: 600;\r\n        margin-bottom: 5px;\r\n        color: #5794F7;\r\n        font-family: 'STXingkai', 'pgz', serif !important;\r\n    }\r\n\r\n    /* 侧边栏标题 */\r\n    .mid-side-title {\r\n        font-size: 1.5rem;\r\n        font-weight: 600;\r\n        margin-bottom: 5px;\r\n        cursor: text;\r\n    }\r\n\r\n    /* 左边目录列表 */\r\n    .left-directory {\r\n        /*margin-left: 15px;*/\r\n        font-size: 1.1rem !important;\r\n        display: block;\r\n        line-height: 35px;\r\n        height: initial;\r\n        white-space: pre-wrap;\r\n    }\r\n\r\n    /* 右边目录列表 */\r\n    .right-directory {\r\n        /*margin-left: 15px;*/\r\n        font-size: 1.1rem !important;\r\n        display: block;\r\n        line-height: 30px;\r\n        height: initial;\r\n        white-space: normal;\r\n        margin-bottom: 10px;\r\n    }\r\n\r\n    .analysis-content {\r\n        /*word-break: break-word;*/\r\n        /*line-height: 1.5;*/\r\n        font-size: 17px;\r\n        height: 57vh;\r\n        overflow: auto;\r\n    }\r\n\r\n    /*滚动条设置*/\r\n    ::-webkit-scrollbar-track {\r\n        background: rgba(0, 0, 0, 0.1);\r\n        border-radius: 0;\r\n    }\r\n\r\n    ::-webkit-scrollbar {\r\n        -webkit-appearance: none;\r\n        width: 6px;\r\n        height: 6px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n        cursor: pointer;\r\n        border-radius: 5px;\r\n        background: rgba(0, 0, 0, 0.15);\r\n        transition: color 0.2s ease;\r\n    }\r\n</style>\r\n"]}]}