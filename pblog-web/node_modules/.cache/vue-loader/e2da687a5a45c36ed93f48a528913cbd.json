{"remainingRequest":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-web\\node_modules\\.store\\vue-loader@15.11.1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-web\\src\\views\\question\\Question-app.vue?vue&type=style&index=1&id=b0f3cf8e&scoped=true&lang=css","dependencies":[{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-web\\src\\views\\question\\Question-app.vue","mtime":1721286706059},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-web\\node_modules\\.store\\css-loader@3.6.0\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-web\\node_modules\\.store\\vue-loader@15.11.1\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-web\\node_modules\\.store\\postcss-loader@3.0.0\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-web\\node_modules\\.store\\cache-loader@4.1.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-web\\node_modules\\.store\\vue-loader@15.11.1\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qICDosIPmlbTpppblm77og4zmma/kuI3pgI/mmI7luqYgIGJ5IOeoi+W6j+WEkiAgMjAyM+W5tDTmnIgxMeaXpSAgKi8KLmJnU2hhZGUgewogICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjE1KTsKfQoKLyog6aaW5Zu+6auY5bqm6LCD6IqCICovCi5iYW5uZXIgewogICAgaGVpZ2h0OiAyMDBweDsKfQoKLyog5qCH6aKY5paH5a2X5L2N572uICovCi5iYW5uZXItdGl0bGUgewogICAgdG9wOiA0LjVyZW07Cn0KCi8qIOS4gOiogOaWh+Wtl+agvOW8j+iwg+aVtCAqLwouYmFubmVyLWludHJvIHsKICAgIGZvbnQtc2l6ZTogMS4xcmVtOwogICAgZm9udC1mYW1pbHk6ICdTVFhpbmdrYWknLCAncGd6Jywgc2VyaWYgIWltcG9ydGFudDsKICAgIG1heC13aWR0aDogODAlOwogICAgbWFyZ2luOiAwLjZyZW0gYXV0bzsKICAgIGN1cnNvcjogdGV4dDsKfQoKLyog5Li75Yy65Z+f5qC35byPICovCi5ibG9nLWNvbnRhaW5lciB7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIHdpZHRoOiA5OCU7CiAgICBtYXJnaW46IDE0MHB4IGF1dG8gMCBhdXRvOwogICAgcGFkZGluZzogMTBweCAwOwp9CgovKiDkuK3pl7TmmL7npLrlhoXlrrkgKi8KLmFydGljbGUtd3JhcHBlciB7CiAgICBtaW4taGVpZ2h0OiA4MHZoOwp9CgovKiDmlbDlrZfmoIflj7fmoLflvI8gKi8KLm51bSB7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uLy4uL2Fzc2V0cy9pbWdzL2V4YW1UaXRsZS5wbmcnKSBuby1yZXBlYXQgMTAwJSAxMDAlOwogICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluOwogICAgaGVpZ2h0OiAzN3B4OwogICAgd2lkdGg6IDM3cHg7CiAgICBsaW5lLWhlaWdodDogMzBweDsKICAgIGNvbG9yOiAjZmZmOwogICAgZm9udC1zaXplOiAxOXB4OwogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgbWFyZ2luLXJpZ2h0OiAxNXB4OwogICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsKfQoKLyog5Y+C6ICD562U5qGIICovCi5taWQtdGl0bGUgewogICAgZm9udC1zaXplOiAxLjJyZW07CiAgICBtYXJnaW4tYm90dG9tOiA1cHg7CiAgICBjb2xvcjogIzU3OTRGNzsKICAgIGZvbnQtZmFtaWx5OiAnU1RYaW5na2FpJywgJ3BneicsIHNlcmlmICFpbXBvcnRhbnQ7Cn0KCi8qIOS4remXtOagh+mimCAqLwoubWlkLXNpZGUtdGl0bGUgewogICAgZm9udC1zaXplOiAxLjNyZW07CiAgICBmb250LXdlaWdodDogNjAwOwogICAgbWFyZ2luLWJvdHRvbTogNXB4Cn0KCi8qIOW3pui+ueebruW9leWIl+ihqCAqLwoubGVmdC1kaXJlY3RvcnkgewogICAgLyptYXJnaW4tbGVmdDogMTVweDsqLwogICAgZm9udC1zaXplOiAxLjFyZW0gIWltcG9ydGFudDsKICAgIGRpc3BsYXk6IGJsb2NrOwogICAgbGluZS1oZWlnaHQ6IDM1cHg7CiAgICBoZWlnaHQ6IGluaXRpYWw7CiAgICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7Cn0KCi8qIOWPs+i+ueebruW9leWIl+ihqCAqLwoucmlnaHQtZGlyZWN0b3J5IHsKICAgIC8qbWFyZ2luLWxlZnQ6IDE1cHg7Ki8KICAgIGZvbnQtc2l6ZTogMS4xcmVtICFpbXBvcnRhbnQ7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIGxpbmUtaGVpZ2h0OiAzMHB4OwogICAgaGVpZ2h0OiBpbml0aWFsOwogICAgd2hpdGUtc3BhY2U6IG5vcm1hbDsKICAgIG1hcmdpbi1ib3R0b206IDEwcHg7Cn0KCiNhbmFseXNpcyB7CiAgICB3b3JkLWJyZWFrOiBicmVhay13b3JkOwogICAgbGluZS1oZWlnaHQ6IDJyZW07CiAgICBmb250LXNpemU6IDFyZW07Cn0KCi5sZWZ0LXNpZGUtdGl0bGUgewogICAgYm9yZGVyLXJhZGl1czogNXB4ICFpbXBvcnRhbnQ7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICB3aWR0aDogOTglOwogICAgbWFyZ2luOiBhdXRvOwogICAgLyp0ZXh0LWFsaWduOiBjZW50ZXI7Ki8KICAgIHRvcDogOXJlbTsKICAgIHBhZGRpbmc6IDVweCAxNHB4OwogICAgZm9udC1zaXplOiAxcmVtOwogICAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KCjo6di1kZWVwIC5lbC1zZWxlY3QsCjo6di1kZWVwIC5lbC1pbnB1dCwKOjp2LWRlZXAgLmVsLWlucHV0X19pbm5lciB7CiAgICBjb2xvcjogIzU3OTRGNzsKICAgIGJvcmRlcjogbm9uZTsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIGJvcmRlci1yYWRpdXM6IDRweDsKICAgIGZvbnQtc2l6ZTogMXJlbTsKfQoKLyppbnB1dOahhiDlj7PkvqfnmoTnrq3lpLQqLwo6OnYtZGVlcCAuZWwtc2VsZWN0IC5lbC1pbnB1dCAuZWwtc2VsZWN0X19jYXJldCB7CiAgICBjb2xvcjogcmdiYSgyNDIsIDIyNCwgMjI0LCAwLjUpOwp9CgovKuenu+WFpW9wdGlvbumAiemhuSDmoLflvI/osIPmlbQqLwo6OnYtZGVlcCAuZWwtc2VsZWN0LWRyb3Bkb3duX19pdGVtLmhvdmVyLCAuZWwtc2VsZWN0LWRyb3Bkb3duX19pdGVtOmhvdmVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNzMsIDIwOCwgMTg1LCAwLjI3KTsKICAgIGNvbG9yOiAjNTc5NEY3ICFpbXBvcnRhbnQ7Cn0KCjo6di1kZWVwIC5lbC1wb3BwZXJbeC1wbGFjZW1lbnRePWJvdHRvbV0gLnBvcHBlcl9fYXJyb3d7CiAgICBtYXJnaW46IGF1dG87Cn0KCi8qICDmgqzmta7mjInpkq7vvIznlKjkuo7mmL7npLrpopjnm67nm67lvZUgICovCi5mbG9hdC1kcmFnLWJ1dHRvbiB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICByaWdodDogMDsKICAgIHRvcDogLTMwcHg7CiAgICB6LWluZGV4OiA2NjY2OwogICAgcGFkZGluZzogNXB4OwogICAgd2lkdGg6IDQwcHg7CiAgICBvcGFjaXR5OiAwLjY7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzhhYmFiOwogICAgYm9yZGVyLXJhZGl1czogOHB4IDBweCAwcHggOHB4OwogICAgYm94LXNoYWRvdzogMHB4IDJweCAxNXB4IDBweCByZ2JhKDExLCA0NSwgODQsIDAuMik7CiAgICBjdXJzb3I6IG1vdmU7Cn0KCi8qICDmgqzmta7mjInpkq7vvIznlKjkuo7mmL7npLrpopjnm67nm67lvZUgICovCi5mbG9hdC1kcmFnLWJ1dHRvbiBzcGFuIHsKICAgIGZvbnQtc2l6ZTogMS43cmVtOwogICAgY29sb3I6ICNmZmZmZmY7CiAgICBsaW5lLWhlaWdodDogMjRweDsKICAgIHVzZXItc2VsZWN0OiBub25lOwp9Cg=="},{"version":3,"sources":["Question-app.vue"],"names":[],"mappings":";AAkjfile":"Question-app.vue","sourceRoot":"src/views/question","sourcesContent":["<template>\r\n  <div>\r\n<!--    <Loading></Loading>-->\r\n    <!-- banner -->\r\n    <div class=\"banner\" :style=\"cover\">\r\n      <div class=\"bgShade\">\r\n        <div class=\"banner-title\">\r\n          面试题\r\n          <div class=\"banner-intro\">\r\n            {{ obj.output }}<span class=\"typed-cursor\">|</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <v-card class=\"left-side-title\">\r\n      <span class=\"mid-title\">题目分类：</span>\r\n      <el-select v-model=\"cIndex\"\r\n                 style=\"width: 60%;\"\r\n                 @change=\"getQuestionList\" placeholder=\"请选择分类\"\r\n      >\r\n        <el-option v-for=\"item in categoryList\" :key=\"item.id\" :label=\"item.name + ' (' + item.questionNum + ')'\"\r\n                   :value=\"item.id\" />\r\n      </el-select>\r\n      <span style=\"float: right;\">\r\n              <el-button\r\n                @click=\"isFavorite\"\r\n                v-if=\"!showFavorite\"\r\n                style=\"border: none;padding: 8px 4px;font-size: 1.5rem\"\r\n                class=\"animated swing\"\r\n                icon=\"el-icon-star-off\" />\r\n\r\n              <el-button\r\n                @click=\"isFavorite\"\r\n                v-if=\"showFavorite\"\r\n                style=\"border: none;padding: 8px 4px;font-size: 1.5rem\"\r\n                class=\"animated swing\"\r\n                type=\"warning\"\r\n                icon=\"el-icon-star-off\" />\r\n\r\n          </span>\r\n    </v-card>\r\n\r\n    <!-- 中间内容 -->\r\n    <v-row class=\"blog-container\">\r\n      <!--   中间当前题目内容   -->\r\n      <v-card class=\"article-wrapper\" style=\"border-radius: 5px\">\r\n        <div style=\"position: sticky; top: 60px\">\r\n          <div ref=\"dragDiv\" class=\"float-drag-button\">\r\n            <span><i class=\"iconfont iconhanbao\" /></span>\r\n          </div>\r\n        </div>\r\n        <!--题目信息-->\r\n        <div style=\"overflow: hidden\">\r\n            <span class=\"mid-side-title\"><i class=\"num\">{{ curIndex + 1 }}</i>{{ questionList[curIndex].quContent\r\n              }}</span>\r\n\r\n          <el-divider />\r\n\r\n          <!-- 参考答案：  -->\r\n          <div class=\"mid-title\">参考答案</div>\r\n\r\n          <div\r\n            id=\"analysis\"\r\n            ref=\"analysis\"\r\n            class=\"analysis-content markdown-body\"\r\n            v-html=\"analysisContent\"\r\n          />\r\n\r\n          <div style=\"float: right;margin-top: 30px; margin-right: 30px;\">\r\n            <el-button type=\"primary\" :disabled=\"curIndex<1\" @click=\"getAnalysis(--curIndex)\">上一题</el-button>\r\n            <el-button type=\"primary\" :disabled=\"curIndex>=questionList.length-1\" @click=\"getAnalysis(++curIndex)\">下一题\r\n            </el-button>\r\n          </div>\r\n        </div>\r\n      </v-card>\r\n    </v-row>\r\n\r\n    <v-dialog v-model=\"questionFlag\" width=\"90%\">\r\n      <v-card style=\"padding-top: 20px\">\r\n        <el-menu\r\n          :default-active=\"curIndex.toString()\"\r\n          active-text-color=\"#5794F7\">\r\n          <el-menu-item\r\n            class=\"right-directory\"\r\n            v-for=\"(item, index) in questionList\" :key=\"item.id\"\r\n            @click=\"getAnalysis(curIndex = index)\"\r\n            :index=\"index.toString()\">\r\n            {{ index + 1 + \"、\" + item.quContent }}\r\n          </el-menu-item>\r\n        </el-menu>\r\n      </v-card>\r\n    </v-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Clipboard from \"clipboard\";\r\n  import EasyTyper from \"easy-typer-js\";\r\n  import { favoriteQuestion, getCategoryAndQuestionList } from \"../../api\";\r\n  import hljs from \"../../plugins/hightLight/index\";\r\n  // import Loading from \"@/components/loading/loading\";\r\n\r\n  export default {\r\n/*    components: {\r\n      Loading\r\n    },*/\r\n    created() {\r\n      this.getQuestionList();\r\n      this.changeHitokoto();\r\n    },\r\n    destroyed() {\r\n      this.clipboard.destroy();\r\n    },\r\n    metaInfo: {\r\n      meta: [{\r\n        name: \"keyWords\",\r\n        content: \"儒林小栈,开源博客,www.codescholar.cn\"  //变量或字符串\r\n      }, {\r\n        name: \"description\",\r\n        content: \"这是我的个人博客、会分享关于编程、写作、思考相关的任何内容，希望可以给来到这儿的人有些帮助...\"\r\n      }]\r\n    },\r\n    data: function() {\r\n      return {\r\n        showFavorite: false,\r\n        analysisContent: \"\",\r\n        // 从路由中获取问题id\r\n        qCategoryId: this.$route.params.qCategoryId,\r\n        // 从路由中获取问题id\r\n        questionId: this.$route.params.questionId,\r\n\r\n        // 问题目录\r\n        questionFlag: false,\r\n\r\n        // 题目索引\r\n        curIndex: 0,\r\n\r\n        // 分类索引\r\n        cIndex: \"\",\r\n\r\n        // 查询到的问题列表\r\n        questionList: [\r\n          {\r\n            id: \"\",\r\n            quContent: \"\",\r\n            analysisMd: \"\"\r\n          }\r\n        ],\r\n        // 问题分类列表\r\n        categoryList: [],\r\n\r\n        img: process.env.VUE_APP_IMG_API,\r\n        clipboard: null,\r\n        imgList: [],\r\n        // 打字机特效配置变量\r\n        obj: {\r\n          output: \"\",\r\n          isEnd: false,\r\n          speed: 300,\r\n          singleBack: false,\r\n          sleep: 0,\r\n          type: \"rollback\",\r\n          backSpeed: 40,\r\n          sentencePause: true\r\n        }\r\n      };\r\n    },\r\n    methods: {\r\n      // 收藏方法\r\n      isFavorite() {\r\n        let fq = this.questionList[this.curIndex]\r\n        if (this.showFavorite) {\r\n          favoriteQuestion(fq.id, 0).then(res => {\r\n            fq.isFavorite = 0;\r\n            this.showFavorite = false;\r\n          }).catch(err => {\r\n            console.log(err)\r\n          })\r\n        } else if (!this.showFavorite) {\r\n          favoriteQuestion(this.questionList[this.curIndex].id, 1).then(res => {\r\n            fq.isFavorite = 1;\r\n            this.showFavorite = true;\r\n          }).catch(err => {\r\n            console.log(err)\r\n          })\r\n        }\r\n      },\r\n      // 获取分类和题目信息\r\n      getQuestionList(cid, qid) {\r\n\r\n        if (typeof (cid) === \"undefined\" && typeof (qid) === \"undefined\") {\r\n          cid = this.qCategoryId;\r\n          qid = this.questionId;\r\n        }\r\n\r\n        if (cid === null || cid === 0 || cid === \"\" || typeof (cid) === \"undefined\") {\r\n          this.qCategoryId = cid = 1;\r\n        }\r\n\r\n        getCategoryAndQuestionList(cid).then(res => {\r\n          this.questionList = res.data.questionList;\r\n          this.categoryList = res.data.qCategoryList;\r\n\r\n          for (const index in this.categoryList) {\r\n            if (this.categoryList[index].id == cid) {\r\n              this.cIndex = this.categoryList[index].name + \" (\" + this.categoryList[index].questionNum + \")\";\r\n            }\r\n          }\r\n\r\n          if (qid !== null && qid !== 0 && qid !== \"\" && typeof (qid) !== \"undefined\") {\r\n            for (const index in this.questionList) {\r\n              if (this.questionList[index].id == qid) {\r\n                this.curIndex = parseInt(index);\r\n              }\r\n            }\r\n          } else {\r\n            this.curIndex = 0;\r\n          }\r\n          this.getAnalysis(this.curIndex);\r\n        });\r\n      },\r\n\r\n      getAnalysis(curIndex) {\r\n        const that = this;\r\n        if (that.questionList[curIndex].isFavorite === 1){\r\n          that.showFavorite = true;\r\n        } else {\r\n          that.showFavorite = false;\r\n        }\r\n        this.markdownToHtml(this.questionList[curIndex].analysisMd);\r\n        this.$nextTick(() => {\r\n          // 添加代码复制功能\r\n          this.clipboard = new Clipboard(\".copy-btn\");\r\n          this.clipboard.on(\"success\", () => {\r\n            this.$toast({ type: \"success\", message: \"复制成功\" });\r\n          });\r\n          // 添加图片预览功能\r\n          const imgList = this.$refs.analysis.getElementsByTagName(\"img\");\r\n          for (var i = 0; i < imgList.length; i++) {\r\n            this.imgList.push(imgList[i].src);\r\n            imgList[i].addEventListener(\"click\", function(e) {\r\n              that.previewImg(e.target.currentSrc);\r\n            });\r\n          }\r\n          // 关闭模态框\r\n          this.questionFlag = false;\r\n          // 回到顶部\r\n          document.documentElement.scrollTop = 0;\r\n        });\r\n      },\r\n\r\n      markdownToHtml(data) {\r\n        const MarkdownIt = require(\"markdown-it\");\r\n        const md = new MarkdownIt({\r\n          html: true,\r\n          linkify: true,\r\n          typographer: true,\r\n          highlight: function(str, lang) {\r\n            // 当前时间加随机数生成唯一的id标识\r\n            var d = new Date().getTime();\r\n            if (\r\n              window.performance &&\r\n              typeof window.performance.now === \"function\"\r\n            ) {\r\n              d += performance.now();\r\n            }\r\n            const codeIndex = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(\r\n              /[xy]/g,\r\n              function(c) {\r\n                var r = (d + Math.random() * 16) % 16 | 0;\r\n                d = Math.floor(d / 16);\r\n                return (c == \"x\" ? r : (r & 0x3) | 0x8).toString(16);\r\n              }\r\n            );\r\n            // 复制功能主要使用的是 clipboard.js\r\n            let html = `<button class=\"copy-btn iconfont iconfuzhi\" type=\"button\" data-clipboard-action=\"copy\" data-clipboard-target=\"#copy${codeIndex}\"></button>`;\r\n            const linesLength = str.split(/\\n/).length - 1;\r\n            // 生成行号\r\n            let linesNum = \"<span aria-hidden=\\\"true\\\" class=\\\"line-numbers-rows\\\">\";\r\n            for (let index = 0; index < linesLength; index++) {\r\n              linesNum = linesNum + \"<span></span>\";\r\n            }\r\n            linesNum += \"</span>\";\r\n            if (lang && hljs.getLanguage(lang)) {\r\n              // highlight.js 高亮代码\r\n              const preCode = hljs.highlight(lang, str, true).value;\r\n              html = html + preCode;\r\n              if (linesLength) {\r\n                html += \"<b class=\\\"name\\\">\" + lang + \"</b>\";\r\n              }\r\n              // 将代码包裹在 textarea 中，由于防止textarea渲染出现问题，这里将 \"<\" 用 \"<\" 代替，不影响复制功能\r\n              return `<pre class=\"hljs\"><code>${html}</code>${linesNum}</pre><textarea style=\"position: absolute;top: -9999px;left: -9999px;z-index: -9999;\" id=\"copy${codeIndex}\">${str.replace(\r\n                /<\\/textarea>/g,\r\n                \"</textarea>\"\r\n              )}</textarea>`;\r\n            }\r\n          }\r\n        });\r\n        // 将markdown替换为html标签\r\n        this.analysisContent = md.render(data);\r\n      },\r\n      previewImg(img) {\r\n        this.$imagePreview({\r\n          images: this.imgList,\r\n          index: this.imgList.indexOf(img)\r\n        });\r\n      },\r\n      changeHitokoto() {\r\n        // 加载一言名句 a 动画，b 漫画，c 游戏，d 文学，e 原创，f 来自网络，g 其他，h 影视，i 诗词，j 网易云，k 哲学，l 抖机灵\r\n        fetch(\"https://v1.hitokoto.cn?c=i&c=j&c=k&c=d\")\r\n          .then(res => {\r\n            return res.json();\r\n          })\r\n          .then(({ hitokoto }) => {\r\n            this.initTyped(hitokoto);\r\n          });\r\n      },\r\n      // 一言Api进行打字机循环输出效果  by  程序儒  2023年4月11日\r\n      initTyped(input, fn, hooks) {\r\n        const obj = this.obj;\r\n        const typed = new EasyTyper(obj, input, fn, hooks);\r\n      },\r\n      step(i) {\r\n        return \"index\" + i;\r\n      }\r\n    },\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n        // 获取DOM元素\r\n        let dragDiv = this.$refs.dragDiv;\r\n        // 缓存 clientX clientY 的对象: 用于判断是点击事件还是移动事件\r\n        let clientOffset = {};\r\n        // 绑定鼠标按下事件\r\n        dragDiv.addEventListener(\"mousedown\", (event) => {\r\n          let offsetX = dragDiv.getBoundingClientRect().left; // 获取当前的x轴距离\r\n          let offsetY = dragDiv.getBoundingClientRect().top; // 获取当前的y轴距离\r\n          let innerX = event.clientX - offsetX; // 获取鼠标在方块内的x轴距\r\n          let innerY = event.clientY - offsetY; // 获取鼠标在方块内的y轴距\r\n          // 缓存 clientX clientY\r\n          clientOffset.clientX = event.clientX;\r\n          clientOffset.clientY = event.clientY;\r\n          // 鼠标移动的时候不停的修改div的left和top值\r\n          document.onmousemove = function(event) {\r\n            dragDiv.style.left = event.clientX - innerX + \"px\";\r\n            dragDiv.style.top = event.clientY - innerY + \"px\";\r\n            // dragDiv 距离顶部的距离\r\n            let dragDivTop = window.innerHeight - dragDiv.getBoundingClientRect().height;\r\n            // dragDiv 距离左部的距离\r\n            let dragDivLeft = window.innerWidth - dragDiv.getBoundingClientRect().width;\r\n            // 边界判断处理\r\n            // 1、设置左右不能动\r\n            dragDiv.style.left = dragDivLeft + \"px\";\r\n            // 2、超出顶部处理\r\n            if (dragDiv.getBoundingClientRect().top <= 0) {\r\n              dragDiv.style.top = \"0px\";\r\n            }\r\n            // 3、超出底部处理\r\n            if (dragDiv.getBoundingClientRect().top >= dragDivTop) {\r\n              dragDiv.style.top = dragDivTop + \"px\";\r\n            }\r\n          };\r\n          // 鼠标抬起时，清除绑定在文档上的mousemove和mouseup事件；否则鼠标抬起后还可以继续拖拽方块\r\n          document.onmouseup = function() {\r\n            document.onmousemove = null;\r\n            document.onmouseup = null;\r\n          };\r\n        }, false);\r\n        // 绑定鼠标松开事件\r\n        dragDiv.addEventListener(\"mouseup\", (event) => {\r\n          let clientX = event.clientX;\r\n          let clientY = event.clientY;\r\n          if (clientX === clientOffset.clientX && clientY === clientOffset.clientY) {\r\n            this.questionFlag = true;\r\n          }\r\n        });\r\n      });\r\n    },\r\n    computed: {\r\n      cover() {\r\n        var cover = \"\";\r\n        this.$store.state.blogInfo.pageList.forEach(item => {\r\n          if (item.pageLabel === \"question\") {\r\n            cover = item.pageCover;\r\n          }\r\n        });\r\n        return \"background: url(\" + cover + \") center center / cover no-repeat\";\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n\r\n<style lang=\"stylus\">\r\n  .typed-cursor\r\n    opacity: 1\r\n    animation: blink 0.7s infinite\r\n\r\n  @keyframes blink\r\n    0%\r\n      opacity: 1\r\n    50%\r\n      opacity: 0\r\n    100%\r\n      opacity: 1\r\n</style>\r\n\r\n<style scoped>\r\n    /*  调整首图背景不透明度  by 程序儒  2023年4月11日  */\r\n    .bgShade {\r\n        background-color: rgba(0, 0, 0, 0.15);\r\n    }\r\n\r\n    /* 首图高度调节 */\r\n    .banner {\r\n        height: 200px;\r\n    }\r\n\r\n    /* 标题文字位置 */\r\n    .banner-title {\r\n        top: 4.5rem;\r\n    }\r\n\r\n    /* 一言文字格式调整 */\r\n    .banner-intro {\r\n        font-size: 1.1rem;\r\n        font-family: 'STXingkai', 'pgz', serif !important;\r\n        max-width: 80%;\r\n        margin: 0.6rem auto;\r\n        cursor: text;\r\n    }\r\n\r\n    /* 主区域样式 */\r\n    .blog-container {\r\n        display: block;\r\n        width: 98%;\r\n        margin: 140px auto 0 auto;\r\n        padding: 10px 0;\r\n    }\r\n\r\n    /* 中间显示内容 */\r\n    .article-wrapper {\r\n        min-height: 80vh;\r\n    }\r\n\r\n    /* 数字标号样式 */\r\n    .num {\r\n        display: inline-block;\r\n        background: url('../../assets/imgs/examTitle.png') no-repeat 100% 100%;\r\n        background-size: contain;\r\n        height: 37px;\r\n        width: 37px;\r\n        line-height: 30px;\r\n        color: #fff;\r\n        font-size: 19px;\r\n        text-align: center;\r\n        margin-right: 15px;\r\n        vertical-align: middle;\r\n    }\r\n\r\n    /* 参考答案 */\r\n    .mid-title {\r\n        font-size: 1.2rem;\r\n        margin-bottom: 5px;\r\n        color: #5794F7;\r\n        font-family: 'STXingkai', 'pgz', serif !important;\r\n    }\r\n\r\n    /* 中间标题 */\r\n    .mid-side-title {\r\n        font-size: 1.3rem;\r\n        font-weight: 600;\r\n        margin-bottom: 5px\r\n    }\r\n\r\n    /* 左边目录列表 */\r\n    .left-directory {\r\n        /*margin-left: 15px;*/\r\n        font-size: 1.1rem !important;\r\n        display: block;\r\n        line-height: 35px;\r\n        height: initial;\r\n        white-space: pre-wrap;\r\n    }\r\n\r\n    /* 右边目录列表 */\r\n    .right-directory {\r\n        /*margin-left: 15px;*/\r\n        font-size: 1.1rem !important;\r\n        display: block;\r\n        line-height: 30px;\r\n        height: initial;\r\n        white-space: normal;\r\n        margin-bottom: 10px;\r\n    }\r\n\r\n    #analysis {\r\n        word-break: break-word;\r\n        line-height: 2rem;\r\n        font-size: 1rem;\r\n    }\r\n\r\n    .left-side-title {\r\n        border-radius: 5px !important;\r\n        position: relative;\r\n        width: 98%;\r\n        margin: auto;\r\n        /*text-align: center;*/\r\n        top: 9rem;\r\n        padding: 5px 14px;\r\n        font-size: 1rem;\r\n        font-weight: bold;\r\n    }\r\n\r\n    ::v-deep .el-select,\r\n    ::v-deep .el-input,\r\n    ::v-deep .el-input__inner {\r\n        color: #5794F7;\r\n        border: none;\r\n        text-align: center;\r\n        border-radius: 4px;\r\n        font-size: 1rem;\r\n    }\r\n\r\n    /*input框 右侧的箭头*/\r\n    ::v-deep .el-select .el-input .el-select__caret {\r\n        color: rgba(242, 224, 224, 0.5);\r\n    }\r\n\r\n    /*移入option选项 样式调整*/\r\n    ::v-deep .el-select-dropdown__item.hover, .el-select-dropdown__item:hover {\r\n        background-color: rgba(73, 208, 185, 0.27);\r\n        color: #5794F7 !important;\r\n    }\r\n\r\n    ::v-deep .el-popper[x-placement^=bottom] .popper__arrow{\r\n        margin: auto;\r\n    }\r\n\r\n    /*  悬浮按钮，用于显示题目目录  */\r\n    .float-drag-button {\r\n        position: absolute;\r\n        right: 0;\r\n        top: -30px;\r\n        z-index: 6666;\r\n        padding: 5px;\r\n        width: 40px;\r\n        opacity: 0.6;\r\n        background-color: #38abab;\r\n        border-radius: 8px 0px 0px 8px;\r\n        box-shadow: 0px 2px 15px 0px rgba(11, 45, 84, 0.2);\r\n        cursor: move;\r\n    }\r\n\r\n    /*  悬浮按钮，用于显示题目目录  */\r\n    .float-drag-button span {\r\n        font-size: 1.7rem;\r\n        color: #ffffff;\r\n        line-height: 24px;\r\n        user-select: none;\r\n    }\r\n</style>\r\n"]}]}