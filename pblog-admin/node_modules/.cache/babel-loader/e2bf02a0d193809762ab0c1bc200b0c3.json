{"remainingRequest":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\babel-loader\\lib\\index.js!E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\src\\components\\verifition\\Verify\\VerifyPoints.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\src\\components\\verifition\\Verify\\VerifyPoints.vue","mtime":1721286705967},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\babel.config.js","mtime":1721286705921},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1721358892040},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1721358892834},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1721358892040},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1721358887250}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["resetSize","_code_chars","_code_color1","_code_color2","aesEncrypt","reqGet","reqCheck","name","props","mode","type","String","default","captchaType","vSpace","Number","imgSize","Object","_default","width","height","barSize","defaultImg","data","secretKey","checkNum","fontPos","checkPosArr","num","pointBackImgBase","poinTextList","backToken","setSize","imgHeight","imgWidth","barHeight","barWidth","tempPoints","text","barAreaColor","undefined","barAreaBorderColor","showRefresh","bindingClick","computed","watch","immediate","handler","init","mounted","$el","onselectstart","methods","_this","splice","length","getPictrue","$nextTick","$parent","$emit","canvasClick","e","_this2","push","getMousePos","$refs","canvas","createPoint","pointTransfrom","setTimeout","captchaVerification","JSON","stringify","then","res","repCode","clickShow","refresh","obj","x","offsetX","y","offsetY","pos","assign","_this3","clientUid","localStorage","getItem","ts","Date","now","repData","originalImageBase64","token","wordList","join","repMsg","pointArr","newPointArr","map","p","Math","round","parseInt"],"sources":["src/components/verifition/Verify/VerifyPoints.vue"],"sourcesContent":["<template>\r\n  <div\r\n    style=\"position: relative\"\r\n  >\r\n    <div class=\"verify-img-out\">\r\n      <div\r\n        class=\"verify-img-panel\"\r\n        :style=\"{'width': setSize.imgWidth,\r\n                 'height': setSize.imgHeight,\r\n                 'background-size' : setSize.imgWidth + ' '+ setSize.imgHeight,\r\n                 'margin-bottom': vSpace + 'px'}\"\r\n      >\r\n        <div v-show=\"showRefresh\" class=\"verify-refresh\" style=\"z-index:3\" @click=\"refresh\">\r\n          <i class=\"iconfont icon-refresh\" />\r\n        </div>\r\n        <img\r\n          ref=\"canvas\"\r\n          :src=\"pointBackImgBase?('data:image/png;base64,'+pointBackImgBase):defaultImg\"\r\n          alt=\"\"\r\n          style=\"width:100%;height:100%;display:block\"\r\n          @click=\"bindingClick?canvasClick($event):undefined\"\r\n        >\r\n\r\n        <div\r\n          v-for=\"(tempPoint, index) in tempPoints\"\r\n          :key=\"index\"\r\n          class=\"point-area\"\r\n          :style=\"{\r\n            'background-color':'#1abd6c',\r\n            color:'#fff',\r\n            'z-index':9999,\r\n            width:'20px',\r\n            height:'20px',\r\n            'text-align':'center',\r\n            'line-height':'20px',\r\n            'border-radius': '50%',\r\n            position:'absolute',\r\n            top:parseInt(tempPoint.y-10) + 'px',\r\n            left:parseInt(tempPoint.x-10) + 'px'\r\n          }\"\r\n        >\r\n          {{ index + 1 }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- 'height': this.barSize.height, -->\r\n    <div\r\n      class=\"verify-bar-area\"\r\n      :style=\"{'width': setSize.imgWidth,\r\n               'color': this.barAreaColor,\r\n               'border-color': this.barAreaBorderColor,\r\n               'line-height':this.barSize.height}\"\r\n    >\r\n      <span class=\"verify-msg\">{{ text }}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script type=\"text/babel\">\r\n/**\r\n     * VerifyPoints\r\n     * @description 点选\r\n     * */\r\nimport { resetSize, _code_chars, _code_color1, _code_color2 } from './../utils/util'\r\nimport { aesEncrypt } from './../utils/ase'\r\nimport { reqGet, reqCheck } from './../api/index'\r\n\r\nexport default {\r\n  name: 'VerifyPoints',\r\n  props: {\r\n    // 弹出式pop，固定fixed\r\n    mode: {\r\n      type: String,\r\n      default: 'fixed'\r\n    },\r\n    captchaType: {\r\n      type: String\r\n    },\r\n    // 间隔\r\n    vSpace: {\r\n      type: Number,\r\n      default: 5\r\n    },\r\n    imgSize: {\r\n      type: Object,\r\n      default() {\r\n        return {\r\n          width: '310px',\r\n          height: '155px'\r\n        }\r\n      }\r\n    },\r\n    barSize: {\r\n      type: Object,\r\n      default() {\r\n        return {\r\n          width: '310px',\r\n          height: '40px'\r\n        }\r\n      }\r\n    },\r\n    defaultImg: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      secretKey: '', // 后端返回的ase加密秘钥\r\n      checkNum: 3, // 默认需要点击的字数\r\n      fontPos: [], // 选中的坐标信息\r\n      checkPosArr: [], // 用户点击的坐标\r\n      num: 1, // 点击的记数\r\n      pointBackImgBase: '', // 后端获取到的背景图片\r\n      poinTextList: [], // 后端返回的点击字体顺序\r\n      backToken: '', // 后端返回的token值\r\n      setSize: {\r\n        imgHeight: 0,\r\n        imgWidth: 0,\r\n        barHeight: 0,\r\n        barWidth: 0\r\n      },\r\n      tempPoints: [],\r\n      text: '',\r\n      barAreaColor: undefined,\r\n      barAreaBorderColor: undefined,\r\n      showRefresh: true,\r\n      bindingClick: true\r\n    }\r\n  },\r\n  computed: {\r\n    resetSize() {\r\n      return resetSize\r\n    }\r\n  },\r\n  watch: {\r\n    // type变化则全面刷新\r\n    type: {\r\n      immediate: true,\r\n      handler() {\r\n        this.init()\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // 禁止拖拽\r\n    this.$el.onselectstart = function() {\r\n      return false\r\n    }\r\n  },\r\n  methods: {\r\n    init() {\r\n      // 加载页面\r\n      this.fontPos.splice(0, this.fontPos.length)\r\n      this.checkPosArr.splice(0, this.checkPosArr.length)\r\n      this.num = 1\r\n      this.getPictrue()\r\n      this.$nextTick(() => {\r\n        this.setSize = this.resetSize(this)\t// 重新设置宽度高度\r\n        this.$parent.$emit('ready', this)\r\n      })\r\n    },\r\n    canvasClick(e) {\r\n      this.checkPosArr.push(this.getMousePos(this.$refs.canvas, e))\r\n      if (this.num == this.checkNum) {\r\n        this.num = this.createPoint(this.getMousePos(this.$refs.canvas, e))\r\n        // 按比例转换坐标值\r\n        this.checkPosArr = this.pointTransfrom(this.checkPosArr, this.setSize)\r\n        // 等创建坐标执行完\r\n        setTimeout(() => {\r\n          // var flag = this.comparePos(this.fontPos, this.checkPosArr);\r\n          // 发送后端请求\r\n          var captchaVerification = this.secretKey ? aesEncrypt(this.backToken + '---' + JSON.stringify(this.checkPosArr), this.secretKey) : this.backToken + '---' + JSON.stringify(this.checkPosArr)\r\n          const data = {\r\n            captchaType: this.captchaType,\r\n            'pointJson': this.secretKey ? aesEncrypt(JSON.stringify(this.checkPosArr), this.secretKey) : JSON.stringify(this.checkPosArr),\r\n            'token': this.backToken\r\n          }\r\n          reqCheck(data).then(res => {\r\n            if (res.repCode == '0000') {\r\n              this.barAreaColor = '#4cae4c'\r\n              this.barAreaBorderColor = '#5cb85c'\r\n              this.text = '验证成功'\r\n              this.bindingClick = false\r\n              if (this.mode == 'pop') {\r\n                setTimeout(() => {\r\n                  this.$parent.clickShow = false\r\n                  this.refresh()\r\n                }, 1500)\r\n              }\r\n              this.$parent.$emit('success', { captchaVerification })\r\n            } else {\r\n              this.$parent.$emit('error', this)\r\n              this.barAreaColor = '#d9534f'\r\n              this.barAreaBorderColor = '#d9534f'\r\n              this.text = '验证失败'\r\n              setTimeout(() => {\r\n                this.refresh()\r\n              }, 700)\r\n            }\r\n          })\r\n        }, 400)\r\n      }\r\n      if (this.num < this.checkNum) {\r\n        this.num = this.createPoint(this.getMousePos(this.$refs.canvas, e))\r\n      }\r\n    },\r\n\r\n    // 获取坐标\r\n    getMousePos: function(obj, e) {\r\n      var x = e.offsetX\r\n      var y = e.offsetY\r\n      return { x, y }\r\n    },\r\n    // 创建坐标点\r\n    createPoint: function(pos) {\r\n      this.tempPoints.push(Object.assign({}, pos))\r\n      return ++this.num\r\n    },\r\n    refresh: function() {\r\n      this.tempPoints.splice(0, this.tempPoints.length)\r\n      this.barAreaColor = '#000'\r\n      this.barAreaBorderColor = '#ddd'\r\n      this.bindingClick = true\r\n      this.fontPos.splice(0, this.fontPos.length)\r\n      this.checkPosArr.splice(0, this.checkPosArr.length)\r\n      this.num = 1\r\n      this.getPictrue()\r\n      this.text = '验证失败'\r\n      this.showRefresh = true\r\n    },\r\n\r\n    // 请求背景图片和验证图片\r\n    getPictrue() {\r\n      const data = {\r\n        captchaType: this.captchaType,\r\n        clientUid: localStorage.getItem('point'),\r\n        ts: Date.now() // 现在的时间戳\r\n      }\r\n      reqGet(data).then(res => {\r\n        if (res.repCode == '0000') {\r\n          this.pointBackImgBase = res.repData.originalImageBase64\r\n          this.backToken = res.repData.token\r\n          this.secretKey = res.repData.secretKey\r\n          this.poinTextList = res.repData.wordList\r\n          this.text = '请依次点击【' + this.poinTextList.join(',') + '】'\r\n        } else {\r\n          this.text = res.repMsg\r\n        }\r\n\r\n        // 判断接口请求次数是否失效\r\n        if (res.repCode == '6201') {\r\n          this.pointBackImgBase = null\r\n        }\r\n      })\r\n    },\r\n    // 坐标转换函数\r\n    pointTransfrom(pointArr, imgSize) {\r\n      var newPointArr = pointArr.map(p => {\r\n        const x = Math.round(310 * p.x / parseInt(imgSize.imgWidth))\r\n        const y = Math.round(155 * p.y / parseInt(imgSize.imgHeight))\r\n        return { x, y }\r\n      })\r\n      // console.log(newPointArr,\"newPointArr\");\r\n      return newPointArr\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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"}]}