{"remainingRequest":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\babel-loader\\lib\\index.js!E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\src\\components\\verifition\\Verify\\VerifySlide.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\src\\components\\verifition\\Verify\\VerifySlide.vue","mtime":1721286705968},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\babel.config.js","mtime":1721286705921},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1721358892040},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1721358892834},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1721358892040},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1721358887250}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["aesEncrypt","resetSize","reqGet","reqCheck","name","props","captchaType","type","String","default","mode","vSpace","Number","explain","imgSize","Object","_default","width","height","blockSize","barSize","defaultImg","data","secretKey","passFlag","backImgBase","blockBackImgBase","backToken","startMoveTime","endMovetime","tipsBackColor","tipWords","text","finishText","setSize","imgHeight","imgWidth","barHeight","barWidth","top","left","moveBlockLeft","undefined","leftBarWidth","moveBlockBackgroundColor","leftBarBorderColor","iconColor","iconClass","status","isEnd","showRefresh","transitionLeft","transitionWidth","computed","barArea","$el","querySelector","watch","immediate","handler","init","mounted","onselectstart","console","log","methods","_this2","getPictrue","$nextTick","key","$set","$parent","$emit","_this","window","removeEventListener","e","move","end","addEventListener","start","event","touches","x","clientX","pageX","startLeft","Math","floor","getBoundingClientRect","Date","stopPropagation","bar_area_left","move_block_left","offsetWidth","parseInt","_this3","moveLeftDistance","replace","JSON","stringify","y","then","res","repCode","setTimeout","clickShow","refresh","concat","toFixed","captchaVerification","closeBox","_this4","_this5","clientUid","localStorage","getItem","ts","now","repData","originalImageBase64","jigsawImageBase64","token","repMsg"],"sources":["src/components/verifition/Verify/VerifySlide.vue"],"sourcesContent":["<template>\r\n  <div style=\"position: relative;\">\r\n    <div\r\n      v-if=\"type === '2'\"\r\n      class=\"verify-img-out\"\r\n      :style=\"{height: (parseInt(setSize.imgHeight) + vSpace) + 'px'}\"\r\n    >\r\n      <div\r\n        class=\"verify-img-panel\"\r\n        :style=\"{width: setSize.imgWidth,\r\n                 height: setSize.imgHeight,}\"\r\n      >\r\n        <img :src=\"backImgBase?('data:image/png;base64,'+backImgBase):defaultImg\" alt=\"\" style=\"width:100%;height:100%;display:block\">\r\n        <div v-show=\"showRefresh\" class=\"verify-refresh\" @click=\"refresh\"><i class=\"iconfont icon-refresh\" />\r\n        </div>\r\n        <transition name=\"tips\">\r\n          <span v-if=\"tipWords\" class=\"verify-tips\" :class=\"passFlag ?'suc-bg':'err-bg'\">{{ tipWords }}</span>\r\n        </transition>\r\n      </div>\r\n    </div>\r\n    <!-- 公共部分 -->\r\n    <div\r\n      class=\"verify-bar-area\"\r\n      :style=\"{width: setSize.imgWidth,\r\n               height: barSize.height,\r\n               'line-height':barSize.height}\"\r\n    >\r\n      <span class=\"verify-msg\" v-text=\"text\" />\r\n      <div\r\n        class=\"verify-left-bar\"\r\n        :style=\"{width: (leftBarWidth!==undefined)?leftBarWidth: barSize.height, height: barSize.height, 'border-color': leftBarBorderColor, transaction: transitionWidth}\"\r\n      >\r\n        <span class=\"verify-msg\" v-text=\"finishText\" />\r\n        <div\r\n          class=\"verify-move-block\"\r\n          :style=\"{width: barSize.height, height: barSize.height, 'background-color': moveBlockBackgroundColor, left: moveBlockLeft, transition: transitionLeft}\"\r\n          @touchstart=\"start\"\r\n          @mousedown=\"start\"\r\n        >\r\n          <i\r\n            :class=\"['verify-icon iconfont', iconClass]\"\r\n            :style=\"{color: iconColor}\"\r\n          />\r\n          <div\r\n            v-if=\"type === '2'\"\r\n            class=\"verify-sub-block\"\r\n            :style=\"{'width':Math.floor(parseInt(setSize.imgWidth)*47/310)+ 'px',\r\n                     'height': setSize.imgHeight,\r\n                     'top':'-' + (parseInt(setSize.imgHeight) + vSpace) + 'px',\r\n                     'background-size': setSize.imgWidth + ' ' + setSize.imgHeight,\r\n            }\"\r\n          >\r\n            <img :src=\"'data:image/png;base64,'+blockBackImgBase\" alt=\"\" style=\"width:100%;height:100%;display:block\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script type=\"text/babel\">\r\n/**\r\n     * VerifySlide\r\n     * @description 滑块\r\n     * */\r\nimport { aesEncrypt } from './../utils/ase'\r\nimport { resetSize } from './../utils/util'\r\nimport { reqGet, reqCheck } from './../api/index'\r\n\r\n//  \"captchaType\":\"blockPuzzle\",\r\nexport default {\r\n  name: 'VerifySlide',\r\n  props: {\r\n    captchaType: {\r\n      type: String\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: '1'\r\n    },\r\n    // 弹出式pop，固定fixed\r\n    mode: {\r\n      type: String,\r\n      default: 'fixed'\r\n    },\r\n    vSpace: {\r\n      type: Number,\r\n      default: 5\r\n    },\r\n    explain: {\r\n      type: String,\r\n      default: '向右滑动完成验证'\r\n    },\r\n    imgSize: {\r\n      type: Object,\r\n      default() {\r\n        return {\r\n          width: '310px',\r\n          height: '155px'\r\n        }\r\n      }\r\n    },\r\n    blockSize: {\r\n      type: Object,\r\n      default() {\r\n        return {\r\n          width: '50px',\r\n          height: '50px'\r\n        }\r\n      }\r\n    },\r\n    barSize: {\r\n      type: Object,\r\n      default() {\r\n        return {\r\n          width: '310px',\r\n          height: '40px'\r\n        }\r\n      }\r\n    },\r\n    defaultImg: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      secretKey: '', // 后端返回的加密秘钥 字段\r\n      passFlag: '', // 是否通过的标识\r\n      backImgBase: '', // 验证码背景图片\r\n      blockBackImgBase: '', // 验证滑块的背景图片\r\n      backToken: '', // 后端返回的唯一token值\r\n      startMoveTime: '', // 移动开始的时间\r\n      endMovetime: '', // 移动结束的时间\r\n      tipsBackColor: '', // 提示词的背景颜色\r\n      tipWords: '',\r\n      text: '',\r\n      finishText: '',\r\n      setSize: {\r\n        imgHeight: 0,\r\n        imgWidth: 0,\r\n        barHeight: 0,\r\n        barWidth: 0\r\n      },\r\n      top: 0,\r\n      left: 0,\r\n      moveBlockLeft: undefined,\r\n      leftBarWidth: undefined,\r\n      // 移动中样式\r\n      moveBlockBackgroundColor: undefined,\r\n      leftBarBorderColor: '#ddd',\r\n      iconColor: undefined,\r\n      iconClass: 'icon-right',\r\n      status: false, // 鼠标状态\r\n      isEnd: false,\t\t// 是够验证完成\r\n      showRefresh: true,\r\n      transitionLeft: '',\r\n      transitionWidth: ''\r\n    }\r\n  },\r\n  computed: {\r\n    barArea() {\r\n      return this.$el.querySelector('.verify-bar-area')\r\n    },\r\n    resetSize() {\r\n      return resetSize\r\n    }\r\n  },\r\n  watch: {\r\n    // type变化则全面刷新\r\n    type: {\r\n      immediate: true,\r\n      handler() {\r\n        this.init()\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // 禁止拖拽\r\n    this.$el.onselectstart = function() {\r\n      return false\r\n    }\r\n    console.log(this.defaultImg)\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.text = this.explain\r\n      this.getPictrue()\r\n      this.$nextTick(() => {\r\n        const setSize = this.resetSize(this)\t// 重新设置宽度高度\r\n        for (const key in setSize) {\r\n          this.$set(this.setSize, key, setSize[key])\r\n        }\r\n        this.$parent.$emit('ready', this)\r\n      })\r\n\r\n      var _this = this\r\n\r\n      window.removeEventListener('touchmove', function(e) {\r\n        _this.move(e)\r\n      })\r\n      window.removeEventListener('mousemove', function(e) {\r\n        _this.move(e)\r\n      })\r\n\r\n      // 鼠标松开\r\n      window.removeEventListener('touchend', function() {\r\n        _this.end()\r\n      })\r\n      window.removeEventListener('mouseup', function() {\r\n        _this.end()\r\n      })\r\n\r\n      window.addEventListener('touchmove', function(e) {\r\n        _this.move(e)\r\n      })\r\n      window.addEventListener('mousemove', function(e) {\r\n        _this.move(e)\r\n      })\r\n\r\n      // 鼠标松开\r\n      window.addEventListener('touchend', function() {\r\n        _this.end()\r\n      })\r\n      window.addEventListener('mouseup', function() {\r\n        _this.end()\r\n      })\r\n    },\r\n\r\n    // 鼠标按下\r\n    start: function(e) {\r\n      e = e || window.event\r\n      if (!e.touches) { // 兼容PC端\r\n        var x = e.clientX\r\n      } else { // 兼容移动端\r\n        var x = e.touches[0].pageX\r\n      }\r\n      this.startLeft = Math.floor(x - this.barArea.getBoundingClientRect().left)\r\n      this.startMoveTime = +new Date() // 开始滑动的时间\r\n      if (this.isEnd == false) {\r\n        this.text = ''\r\n        this.moveBlockBackgroundColor = '#337ab7'\r\n        this.leftBarBorderColor = '#337AB7'\r\n        this.iconColor = '#fff'\r\n        e.stopPropagation()\r\n        this.status = true\r\n      }\r\n    },\r\n    // 鼠标移动\r\n    move: function(e) {\r\n      e = e || window.event\r\n      if (this.status && this.isEnd == false) {\r\n        if (!e.touches) { // 兼容PC端\r\n          var x = e.clientX\r\n        } else { // 兼容移动端\r\n          var x = e.touches[0].pageX\r\n        }\r\n        var bar_area_left = this.barArea.getBoundingClientRect().left\r\n        var move_block_left = x - bar_area_left // 小方块相对于父元素的left值\r\n        if (move_block_left >= this.barArea.offsetWidth - parseInt(parseInt(this.blockSize.width) / 2) - 2) {\r\n          move_block_left = this.barArea.offsetWidth - parseInt(parseInt(this.blockSize.width) / 2) - 2\r\n        }\r\n        if (move_block_left <= 0) {\r\n          move_block_left = parseInt(parseInt(this.blockSize.width) / 2)\r\n        }\r\n        // 拖动后小方块的left值\r\n        this.moveBlockLeft = (move_block_left - this.startLeft) + 'px'\r\n        this.leftBarWidth = (move_block_left - this.startLeft) + 'px'\r\n      }\r\n    },\r\n\r\n    // 鼠标松开\r\n    end: function() {\r\n      this.endMovetime = +new Date()\r\n      var _this = this\r\n      // 判断是否重合\r\n      if (this.status && this.isEnd == false) {\r\n        var moveLeftDistance = parseInt((this.moveBlockLeft || '').replace('px', ''))\r\n        moveLeftDistance = moveLeftDistance * 310 / parseInt(this.setSize.imgWidth)\r\n        const data = {\r\n          captchaType: this.captchaType,\r\n          'pointJson': this.secretKey ? aesEncrypt(JSON.stringify({ x: moveLeftDistance, y: 5.0 }), this.secretKey) : JSON.stringify({ x: moveLeftDistance, y: 5.0 }),\r\n          'token': this.backToken\r\n        }\r\n        reqCheck(data).then(res => {\r\n          if (res.repCode == '0000') {\r\n            this.moveBlockBackgroundColor = '#5cb85c'\r\n            this.leftBarBorderColor = '#5cb85c'\r\n            this.iconColor = '#fff'\r\n            this.iconClass = 'icon-check'\r\n            this.showRefresh = false\r\n            this.isEnd = true\r\n            if (this.mode == 'pop') {\r\n              setTimeout(() => {\r\n                this.$parent.clickShow = false\r\n                this.refresh()\r\n              }, 1500)\r\n            }\r\n            this.passFlag = true\r\n            this.tipWords = `${((this.endMovetime - this.startMoveTime) / 1000).toFixed(2)}s验证成功`\r\n            var captchaVerification = this.secretKey ? aesEncrypt(this.backToken + '---' + JSON.stringify({ x: moveLeftDistance, y: 5.0 }), this.secretKey) : this.backToken + '---' + JSON.stringify({ x: moveLeftDistance, y: 5.0 })\r\n            setTimeout(() => {\r\n              this.tipWords = ''\r\n              this.$parent.closeBox()\r\n              this.$parent.$emit('success', { captchaVerification })\r\n            }, 1000)\r\n          } else {\r\n            this.moveBlockBackgroundColor = '#d9534f'\r\n            this.leftBarBorderColor = '#d9534f'\r\n            this.iconColor = '#fff'\r\n            this.iconClass = 'icon-close'\r\n            this.passFlag = false\r\n            setTimeout(function() {\r\n              _this.refresh()\r\n            }, 1000)\r\n            this.$parent.$emit('error', this)\r\n            this.tipWords = '验证失败'\r\n            setTimeout(() => {\r\n              this.tipWords = ''\r\n            }, 1000)\r\n          }\r\n        })\r\n        this.status = false\r\n      }\r\n    },\r\n\r\n    refresh: function() {\r\n      this.showRefresh = true\r\n      this.finishText = ''\r\n\r\n      this.transitionLeft = 'left .3s'\r\n      this.moveBlockLeft = 0\r\n\r\n      this.leftBarWidth = undefined\r\n      this.transitionWidth = 'width .3s'\r\n\r\n      this.leftBarBorderColor = '#ddd'\r\n      this.moveBlockBackgroundColor = '#fff'\r\n      this.iconColor = '#000'\r\n      this.iconClass = 'icon-right'\r\n      this.isEnd = false\r\n\r\n      this.getPictrue()\r\n      setTimeout(() => {\r\n        this.transitionWidth = ''\r\n        this.transitionLeft = ''\r\n        this.text = this.explain\r\n      }, 300)\r\n    },\r\n\r\n    // 请求背景图片和验证图片\r\n    getPictrue() {\r\n      const data = {\r\n        captchaType: this.captchaType,\r\n        clientUid: localStorage.getItem('slider'),\r\n        ts: Date.now() // 现在的时间戳\r\n      }\r\n      reqGet(data).then(res => {\r\n        if (res.repCode == '0000') {\r\n          this.backImgBase = res.repData.originalImageBase64\r\n          this.blockBackImgBase = res.repData.jigsawImageBase64\r\n          this.backToken = res.repData.token\r\n          this.secretKey = res.repData.secretKey\r\n        } else {\r\n          this.tipWords = res.repMsg\r\n        }\r\n\r\n        // 判断接口请求次数是否失效\r\n        if (res.repCode == '6201') {\r\n          this.backImgBase = null\r\n          this.blockBackImgBase = null\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n"],"mappings":"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"}]}