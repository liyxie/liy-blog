{"remainingRequest":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\src\\views\\dashboard\\admin\\index.vue?vue&type=style&index=0&id=a361ec26&lang=scss&scoped=true&","dependencies":[{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\src\\views\\dashboard\\admin\\index.vue","mtime":1721286706003},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":1721358891720},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1721358888723},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1721358888130},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1721358886636},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1721358892040},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1721358887250}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5kYXNoYm9hcmQtZWRpdG9yLWNvbnRhaW5lciB7DQogIHBhZGRpbmc6IDMycHg7DQogIGJhY2tncm91bmQtY29sb3I6IHJnYigyNDAsIDI0MiwgMjQ1KTsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KDQogIC5naXRodWItY29ybmVyIHsNCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgdG9wOiAwcHg7DQogICAgYm9yZGVyOiAwOw0KICAgIHJpZ2h0OiAwOw0KICB9DQoNCiAgLmNoYXJ0LXdyYXBwZXIgew0KICAgIGJhY2tncm91bmQ6ICNmZmY7DQogICAgcGFkZGluZzogMTZweCAxNnB4IDA7DQogICAgbWFyZ2luLWJvdHRvbTogMzJweDsNCiAgfQ0KfQ0KDQpAbWVkaWEgKG1heC13aWR0aDoxMDI0cHgpIHsNCiAgLmNoYXJ0LXdyYXBwZXIgew0KICAgIHBhZGRpbmc6IDhweDsNCiAgfQ0KfQ0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqWA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/dashboard/admin","sourcesContent":["<template>\r\n  <div class=\"dashboard-editor-container\">\r\n    <github-corner class=\"github-corner\" />\r\n\r\n    <panel-group />\r\n\r\n    <el-row style=\"background:#fff;padding:16px 16px 0;margin-bottom:32px;\">\r\n      <div id=\"container\" style=\" width: 100%; height: 300px;\" />\r\n    </el-row>\r\n\r\n    <el-row :gutter=\"20\" style=\"margin-top:1.25rem\">\r\n      <el-col :xs=\"24\" :sm=\"24\" :lg=\"8\">\r\n        <el-card>\r\n          <div class=\"e-title\">文章阅读量排行</div>\r\n          <el-table :data=\"list\" style=\"width: 100%;padding-top: 15px\">\r\n            <el-table-column label=\"标题\" min-width=\"200\">\r\n              <template slot-scope=\"scope\">\r\n                <el-link :underline=\"false\" @click=\"onClick(scope.row)\">{{ scope.row.title }}</el-link>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"阅读量\" prop=\"quantity\" width=\"100\" align=\"center\" />\r\n          </el-table>\r\n        </el-card>\r\n      </el-col>\r\n\r\n      <el-col :xs=\"24\" :sm=\"24\" :lg=\"8\">\r\n        <el-card>\r\n          <div class=\"e-title\">文章分类统计</div>\r\n          <div class=\"chart-wrapper\">\r\n            <div id=\"categoryChart\" class=\"chart\" style=\"height:310px;width:100%\" />\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n\r\n      <!-- 文章标签统计 -->\r\n      <el-col :xs=\"24\" :sm=\"24\" :lg=\"8\">\r\n        <el-card style=\"height: 417px\">\r\n          <div class=\"e-title\">文章标签统计</div>\r\n          <div>\r\n            <tag-cloud style=\"margin-top:1.5rem\" :data=\"tagDTOList\" />\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-row style=\"margin-top:1.25rem\">\r\n      <el-card>\r\n        <div class=\"e-title\">一周访问量</div>\r\n        <div id=\"access\" class=\"chart\" style=\"height:350px;width:100%\" />\r\n      </el-card>\r\n    </el-row>\r\n\r\n    <el-dialog\r\n      title=\"通知\"\r\n      :close-on-click-modal=\"false\"\r\n      :visible.sync=\"centerDialogVisible\"\r\n      width=\"50%\"\r\n      :before-close=\"closeNotificationDialogVisible\"\r\n      center\r\n    >\r\n      <span v-html=\"dashboard\" />\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport GithubCorner from '@/components/GithubCorner'\r\nimport PanelGroup from './components/PanelGroup'\r\nimport BoxCard from './components/BoxCard'\r\nimport * as echarts from 'echarts'\r\nrequire('echarts/theme/macarons') // echarts theme\r\n// import resize from './mixins/resize'\r\nimport { init } from '@/api/home'\r\nexport default {\r\n  name: 'DashboardAdmin',\r\n  components: {\r\n    GithubCorner,\r\n    PanelGroup,\r\n    BoxCard\r\n  },\r\n  data() {\r\n    return {\r\n      tagDTOList: [],\r\n      categoryChart: null,\r\n      chart: null,\r\n      list: [],\r\n      BLOG_WEB_URL: process.env.VUE_APP_BLOG_WEB_API,\r\n      blogContributeCount: [],\r\n      centerDialogVisible: this.$store.state.app.openNotificationDialogVisible,\r\n      dashboard: null\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.init()\r\n    })\r\n  },\r\n  beforeDestroy() {\r\n    if (!this.categoryChart) {\r\n      return\r\n    }\r\n    this.categoryChart.dispose()\r\n    this.categoryChart = null\r\n  },\r\n  methods: {\r\n    init: function() {\r\n      init().then(res => {\r\n        this.list = res.data.blogArticles\r\n        this.dashboard = res.data.dashboard\r\n        this.tagDTOList = res.data.tagsList\r\n        this.initContributeDate(res.data.contribute.contributeDate, res.data.contribute.blogContributeCount)\r\n        this.initCategoryChart(res.data.categoryList.categoryList, res.data.categoryList.result)\r\n        this.initChart(res.data.userAccess)\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n    },\r\n    // 初始化文章贡献度\r\n    initContributeDate: function(contributeDate, blogContributeCount) {\r\n      const chart = echarts.init(document.getElementById('container'))\r\n      const option = {\r\n        // 设置背景\r\n        // backgroundColor: '#d0d0d0',\r\n        title: {\r\n          top: 30,\r\n          text: '文章贡献度',\r\n          subtext: '一年内博客提交的数量',\r\n          left: 'center',\r\n          textStyle: {\r\n            color: '#000'\r\n          }\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: function(params) {\r\n            return (params.data[0] + '<br>文章数：' + params.data[1])\r\n          }\r\n        },\r\n        legend: {\r\n          top: '30',\r\n          left: '100',\r\n          data: ['文章数', 'Top 12'],\r\n          textStyle: {\r\n            // 设置字体颜色\r\n            color: '#000'\r\n          }\r\n        },\r\n        calendar: [{\r\n          top: 100,\r\n          left: 'center',\r\n          range: contributeDate,\r\n          splitLine: {\r\n            show: true,\r\n            lineStyle: {\r\n              // 设置月份分割线的颜色\r\n              color: '#D3D3D3',\r\n              width: 4,\r\n              type: 'solid'\r\n            }\r\n          },\r\n          yearLabel: { show: false },\r\n          dayLabel: {\r\n            nameMap: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'], // 设置中文显示\r\n            textStyle: {\r\n              // 设置周显示颜色\r\n              color: '#000'\r\n            },\r\n            firstDay: 1 // 从周一开始\r\n          },\r\n          monthLabel: {\r\n            nameMap: 'cn', // 设置中文显示\r\n            textStyle: {\r\n              // 设置月显示颜色\r\n              color: '#000'\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              // 设置背景颜色\r\n              color: '#ffffff',\r\n              borderWidth: 1,\r\n              // 设置方块分割线段颜色\r\n              borderColor: '#D3D3D3'\r\n            }\r\n          }\r\n        }],\r\n        series: [\r\n          {\r\n            name: '文章数',\r\n            type: 'scatter',\r\n            coordinateSystem: 'calendar',\r\n            data: blogContributeCount,\r\n            // 根据值设置原点大小\r\n            symbolSize: function(val) {\r\n              if (val[1] === 0) {\r\n                return val[1]\r\n              } else {\r\n                let size = 8 + val[1] * 2\r\n                if (size > 18) {\r\n                  size = 18\r\n                }\r\n                return size\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                // 设置圆点颜色\r\n                color: '#2ec7c9'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      chart.setOption(option)\r\n      window.addEventListener('resize', function() {\r\n        chart.resize()\r\n      })\r\n    },\r\n\r\n    // 初始化分类统计\r\n    initCategoryChart: function(categoryList, result) {\r\n      this.categoryChart = echarts.init(document.getElementById('categoryChart'))\r\n      this.categoryChart.setOption({\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n        },\r\n        legend: {\r\n          left: 'center',\r\n          bottom: '10',\r\n          data: categoryList\r\n        },\r\n        series: [\r\n          {\r\n            name: 'WEEKLY WRITE ARTICLES',\r\n            type: 'pie',\r\n            roseType: 'radius',\r\n            radius: [15, 95],\r\n            center: ['50%', '38%'],\r\n            data: result,\r\n            animationEasing: 'cubicInOut',\r\n            animationDuration: 2600\r\n          }\r\n        ]\r\n      })\r\n      const chart = this.categoryChart\r\n      window.addEventListener('resize', function() {\r\n        chart.resize()\r\n      })\r\n    },\r\n\r\n    // 初始化访问线状图\r\n    initChart: function(datas) {\r\n      this.chart = echarts.init(document.getElementById('access'))\r\n      const data = {}\r\n      const createData = []\r\n      const countData = []\r\n      const accessData = []\r\n      datas.forEach(item => {\r\n        createData.push(item.createTime)\r\n        countData.push(item.ip)\r\n        accessData.push(item.access)\r\n      })\r\n      data.createData = createData\r\n      data.countData = countData\r\n      data.accessData = accessData\r\n      this.setOptions(data)\r\n    },\r\n\r\n    setOptions({ createData, countData, accessData } = {}) {\r\n      this.chart.setOption({\r\n        xAxis: {\r\n          data: createData,\r\n          boundaryGap: false,\r\n          axisTick: {\r\n            show: false\r\n          }\r\n        },\r\n        grid: {\r\n          left: 10,\r\n          right: 10,\r\n          bottom: 20,\r\n          top: 30,\r\n          containLabel: true\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross'\r\n          },\r\n          padding: [5, 10]\r\n        },\r\n        yAxis: {\r\n          axisTick: {\r\n            show: false\r\n          }\r\n        },\r\n        legend: {\r\n          data: ['独立用户(UV)', '访问量(PV)']\r\n        },\r\n        series: [\r\n          {\r\n            name: '独立用户(UV)',\r\n            smooth: true,\r\n            type: 'line',\r\n            itemStyle: {\r\n              normal: {\r\n                color: '#FF005A',\r\n                lineStyle: {\r\n                  color: '#FF005A',\r\n                  width: 2\r\n                }\r\n              }\r\n            },\r\n            data: countData,\r\n            animationDuration: 2800,\r\n            animationEasing: 'quadraticOut'\r\n          },\r\n          {\r\n            name: '访问量(PV)',\r\n            smooth: true,\r\n            type: 'line',\r\n            itemStyle: {\r\n              normal: {\r\n                color: '#3888fa',\r\n                lineStyle: {\r\n                  color: '#3888fa',\r\n                  width: 2\r\n                },\r\n                areaStyle: {\r\n                  color: '#f3f8ff'\r\n                }\r\n              }\r\n            },\r\n            data: accessData,\r\n            animationDuration: 2800,\r\n            animationEasing: 'quadraticOut'\r\n          }]\r\n      })\r\n      const chart = this.chart\r\n      window.addEventListener('resize', function() {\r\n        chart.resize()\r\n      })\r\n    },\r\n    // 关闭弹出框\r\n    closeNotificationDialogVisible: function(done) {\r\n      this.$store.dispatch('app/setOpenNotification', false)\r\n      done()\r\n    },\r\n    onClick: function(row) {\r\n      window.open(this.BLOG_WEB_URL + 'articles/' + row.id)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.dashboard-editor-container {\r\n  padding: 32px;\r\n  background-color: rgb(240, 242, 245);\r\n  position: relative;\r\n\r\n  .github-corner {\r\n    position: absolute;\r\n    top: 0px;\r\n    border: 0;\r\n    right: 0;\r\n  }\r\n\r\n  .chart-wrapper {\r\n    background: #fff;\r\n    padding: 16px 16px 0;\r\n    margin-bottom: 32px;\r\n  }\r\n}\r\n\r\n@media (max-width:1024px) {\r\n  .chart-wrapper {\r\n    padding: 8px;\r\n  }\r\n}\r\n</style>\r\n"]}]}