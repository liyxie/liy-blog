{"remainingRequest":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\src\\views\\question\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\src\\views\\question\\index.vue","mtime":1721286706013},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1721358892040},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1721358892834},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1721358892040},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1721358887250}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/question","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <!--查询or添加-->\r\n    <el-form v-show=\"showSearch\" :inline=\"true\" ref=\"form\" :model=\"params\" label-width=\"68px\">\r\n      <el-form-item label=\"问题名称\">\r\n        <el-input style=\"width: 150px\" size=\"small\" v-model=\"params.quContent\" placeholder=\"请输入问题名称\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"分类名\">\r\n        <el-select style=\"width: 130px\" size=\"small\" v-model=\"params.qCategoryId\" filterable clearable reserve-keyword\r\n                   @change=\"handleFind\" placeholder=\"请选择分类\"\r\n        >\r\n          <el-option v-for=\"item in qCategory\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"/>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"发布状态\">\r\n        <el-select style=\"width: 130px\" size=\"small\" v-model=\"params.isPublish\" clearable\r\n                   placeholder=\"是否发布\" @change=\"handleFind\"\r\n        >\r\n          <el-option v-for=\"(item,index) in publishList\" :key=\"index\" :label=\"item\" :value=\"index\"/>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"small\" @click=\"handleFind\">查找</el-button>\r\n        <el-button icon=\"el-icon-refresh\" size=\"small\" @click=\"resetQuery\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n    <el-row :gutter=\"10\" class=\"mb8\">\r\n      <el-col :span=\"1.5\">\r\n        <el-button v-if=\"canAdd\" size=\"small\" class=\"filter-item\" @click=\"handleAdd\" type=\"primary\"\r\n                   icon=\"el-icon-plus\"\r\n        >添加\r\n        </el-button>\r\n      </el-col>\r\n      <el-col :span=\"1.5\">\r\n        <el-button size=\"small\" :disabled=\"!multipleSelection.length\" v-if=\"canDelBatch\" class=\"filter-item\"\r\n                   @click=\"handleDelete\"\r\n                   type=\"danger\"\r\n                   icon=\"el-icon-delete\"\r\n        >批量删除\r\n        </el-button>\r\n      </el-col>\r\n      <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"queryList\"></right-toolbar>\r\n    </el-row>\r\n\r\n    <!--表格区域-->\r\n    <div style=\"margin-top: 5px\">\r\n      <el-table\r\n        border\r\n        :data=\"tableData\"\r\n        style=\"width: 100%\"\r\n        :default-sort=\"{prop: 'sort', order: 'ascending'}\"\r\n        @selection-change=\"handleSelectionChange\"\r\n      >\r\n        <el-table-column align=\"center\" type=\"selection\"/>\r\n        <el-table-column align=\"center\" width=\"60\" label=\"序号\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.$index + 1 }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"quContent\" align=\"center\" label=\"问题\">\r\n          <template slot-scope=\"scope\">\r\n            <el-link :underline=\"false\" @click=\"onClick(scope.row)\">{{ scope.row.quContent }}</el-link>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column align=\"center\" label=\"分类\" width=\"220\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag\r\n              style=\"margin-left: 3px\"\r\n              align=\"center\"\r\n              type=\"warning\"\r\n            >{{ scope.row.qCategoryName }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column align=\"center\" prop=\"sort\" sortable label=\"排序\" width=\"100\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag type=\"warning\">{{ scope.row.sort }}</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"quantity\" align=\"center\" label=\"浏览量\" width=\"100\"/>\r\n        <el-table-column\r\n          width=\"200\"\r\n          align=\"center\"\r\n          prop=\"createTime\"\r\n          sortable\r\n          label=\"添加时间\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ dataFormat(scope.row.createTime) }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column align=\"center\" label=\"操作\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button v-if=\"canUpdate&& scope.row.isPublish === 1\" type=\"info\" size=\"mini\" @click=\"offShelf(scope)\">\r\n              下架\r\n            </el-button>\r\n            <el-button v-if=\"canUpdate&& scope.row.isPublish === 0\" type=\"success\" size=\"mini\" @click=\"release(scope)\">\r\n              发布\r\n            </el-button>\r\n            <el-button v-if=\"canUpdate\" type=\"primary\" size=\"mini\" @click=\"handleUpdate(scope)\">编辑</el-button>\r\n            <el-button v-if=\"canDel\" size=\"mini\" type=\"danger\" @click=\"remove(scope)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!--分页区域-->\r\n      <div class=\"pagination-container\" style=\"float: right;margin-bottom: 1.25rem;margin-top: 1.25rem;\">\r\n        <el-pagination background @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n                       :current-page=\"params.pageNo\" :page-size=\"params.pageSize\" :page-sizes=\"[10, 20, 30]\"\r\n                       layout=\"total, sizes,prev, pager, next,jumper\" :total=\"total\"\r\n        >\r\n        </el-pagination>\r\n      </div>\r\n\r\n      <!--添加or修改区域-->\r\n      <el-dialog\r\n        :title=\"title\"\r\n        :visible.sync=\"centerDialogVisible\"\r\n        :before-close=\"closeModel\"\r\n        width=\"60%\"\r\n        center\r\n      >\r\n        <el-form :rules=\"rules\" ref=\"dataForm\" :model=\"question\" style=\"margin-top: 10px\">\r\n          <el-row>\r\n            <el-col :span=\"16\">\r\n              <el-form-item label=\"问题\" :label-width=\"formLabelWidth\" prop=\"quContent\">\r\n                <el-input v-model=\"question.quContent\" auto-complete=\"off\"></el-input>\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n          <el-row>\r\n            <el-col :span=\"6\">\r\n              <el-form-item label=\"分类\" :label-width=\"formLabelWidth\" prop=\"qCategoryName\">\r\n                <el-tag\r\n                  type=\"success\"\r\n                  v-show=\"question.qCategoryName\"\r\n                  style=\"margin:0 1rem 0 0\"\r\n                  :closable=\"true\"\r\n                  @close=\"removeCategory\"\r\n                >\r\n                  {{ question.qCategoryName }}\r\n                </el-tag>\r\n                <!-- 分类选项 -->\r\n                <el-popover\r\n                  placement=\"bottom-start\"\r\n                  width=\"460\"\r\n                  trigger=\"click\"\r\n                  v-if=\"!question.qCategoryName\"\r\n                >\r\n                  <div class=\"popover-title\">分类</div>\r\n                  <!-- 输入框 -->\r\n                  <el-input style=\"width:100%\" v-model=\"qCategoryName\" placeholder=\"请输入分类名,enter添加自定义分类\"\r\n                            @keyup.enter.native=\"saveCategory\"\r\n                  />\r\n                  <!-- 分类 -->\r\n                  <div class=\"popover-container\">\r\n                    <div>添加分类</div>\r\n                    <el-tag\r\n                      v-for=\"(item, index) of qCategory\"\r\n                      :key=\"index\"\r\n                      style=\"margin-left: 3px;margin-top: 2px\"\r\n                      class=\"qCategory-item\"\r\n                      @click=\"addCategory(item)\"\r\n                    >\r\n                      {{ item.name }}\r\n                    </el-tag>\r\n                  </div>\r\n                  <el-button type=\"success\" plain slot=\"reference\" size=\"small\">\r\n                    添加分类\r\n                  </el-button>\r\n                </el-popover>\r\n              </el-form-item>\r\n            </el-col>\r\n            <el-col :span=\"5\">\r\n              <el-form-item label=\"排序\" prop=\"sort\" :label-width=\"formLabelWidth\">\r\n                <el-input v-model=\"question.sort\"></el-input>\r\n              </el-form-item>\r\n            </el-col>\r\n            <el-col :span=\"6.5\">\r\n              <el-form-item :label-width=\"formLabelWidth\" label=\"是否发布\" prop=\"isPublish\">\r\n                <el-radio-group v-model=\"question.isPublish\" size=\"small\">\r\n                  <el-radio v-for=\"(item,index) in publishList\" :key=\"index\" :label=\"index\" border>{{ item }}</el-radio>\r\n                </el-radio-group>\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n          <el-row>\r\n            <el-col :spam=\"24\">\r\n              <el-form-item :label-width=\"formLabelWidth\" label=\"答案\" prop=\"analysisMd\">\r\n                <mavon-editor placeholder=\"输入答案...\" style=\"height: 500px\" ref=\"md\"\r\n                              v-model=\"question.analysisMd\" @imgDel=\"imgDel\" @change=\"\" @imgAdd=\"imgAdd\"\r\n                />\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"centerDialogVisible = false\">取 消</el-button>\r\n            <el-button v-if=\"canAdd || canUpdate\" type=\"primary\" @click=\"submit\">确定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {\r\n    fetchQuestion,\r\n    remove,\r\n    update,\r\n    top,\r\n    save,\r\n    info,\r\n    deleteBatch,\r\n    pubOrShelf\r\n  } from '@/api/questions'\r\n  import { upload, delBatchFile } from '@/api/imgUpload'\r\n  import { fetchQCategory } from '@/api/qCategory'\r\n  import { parseTime } from '@/utils'\r\n  import { hasAuth } from '@/utils/auth'\r\n  import { mapGetters } from 'vuex'\r\n  import { getDataByDictType } from '@/api/dictData'\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        uploadPictureHost: process.env.VUE_APP_BASE_API + '/file/upload',\r\n        files: {},\r\n        visible: false,\r\n        isEditForm: 0,\r\n        loadingReptile: false,\r\n        centerDialogVisible: false,\r\n        showSearch: true,\r\n        formLabelWidth: '120px',\r\n        tableData: [],\r\n        dictYesOrNoList: [],\r\n        yesOrNoDefaultValue: null,\r\n        img: process.env.VUE_APP_IMG_API,\r\n        BLOG_WEB_URL: process.env.VUE_APP_BLOG_WEB_API,\r\n        yesOrNoList: ['否', '是'],\r\n        yesOrNoStyle: ['danger', 'success'],\r\n        publishList: ['下架', '发布'],\r\n        total: null,\r\n        multipleSelection: [],\r\n        title: null,\r\n        // 加载层信息\r\n        loading: [],\r\n        changeCount: 0,\r\n        isChange: false,\r\n        qCategory: [],\r\n        quContent: null,\r\n        qCategoryName: null,\r\n        question: {},\r\n        rules:\r\n          {\r\n            'quContent': [{ required: true, message: '必填字段', trigger: 'blur' }],\r\n            'qCategoryName': [{ required: true, message: '必填字段', trigger: 'blur' }],\r\n            'sort': [\r\n              { required: true, message: '必填字段', trigger: 'blur' },\r\n              { pattern: /^\\d{1,7}$/, message: '请输入数字且不超过7位', trigger: 'blur' },\r\n            ],\r\n            'isPublish': [{ required: true, message: '必填字段', trigger: 'change' }],\r\n            'analysisMd': [{ required: true, message: '必填字段', trigger: 'change' }]\r\n          },\r\n        params: {\r\n          quContent: null,\r\n          qCategoryId: null,\r\n          isPublish: null,\r\n          pageNo: 1,\r\n          pageSize: 10\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      this.openLoading()\r\n      this.getDictList()\r\n      this.getCategoryList()\r\n      this.queryList()\r\n    },\r\n    computed: {\r\n      ...mapGetters([\r\n        'pres'\r\n      ]),\r\n      canAdd: function() {\r\n        return hasAuth(this.pres, '/system/question/add')\r\n      },\r\n      canDel: function() {\r\n        return hasAuth(this.pres, '/system/question/delete')\r\n      },\r\n      canDelBatch: function() {\r\n        return hasAuth(this.pres, '/system/question/deleteBatch')\r\n      },\r\n      canUpdate: function() {\r\n        return hasAuth(this.pres, '/system/question/update')\r\n      }\r\n    },\r\n    methods: {\r\n      getCategoryList: function() {\r\n        fetchQCategory({ pageNo: 1, pageSize: 100 }).then(res => {\r\n          this.qCategory = res.data.records\r\n        })\r\n      },\r\n      addCategory: function(item) {\r\n        this.question.qCategoryName = item.name\r\n      },\r\n      saveCategory: function() {\r\n        if (this.qCategoryName.trim() !== '') {\r\n          this.question.qCategoryName = this.qCategoryName\r\n        }\r\n      },\r\n      removeCategory: function() {\r\n        this.question.qCategoryName = null\r\n      },\r\n      getDictList: function() {\r\n        let dictTypes = ['sys_publish_status', 'sys_yes_no']\r\n        getDataByDictType(dictTypes).then(response => {\r\n          let dictMap = response.data\r\n          this.dictYesOrNoList = dictMap.sys_yes_no.list\r\n          this.yesOrNoDefaultValue = dictMap.sys_yes_no.defaultValue\r\n        }).catch(err => {\r\n          console.error(err)\r\n        })\r\n      },\r\n      queryList: function() {\r\n        fetchQuestion(this.params).then(res => {\r\n          this.tableData = res.data.records\r\n          this.total = res.data.total\r\n        }).catch(err => {\r\n          console.log(err)\r\n        })\r\n        this.loading.close()\r\n      },\r\n      submit: function() {\r\n        this.$refs['dataForm'].validate((valid) => {\r\n          if (valid) {\r\n            this.question.analysis = this.$refs.md.d_render\r\n            if (this.isEditForm) {\r\n              update(this.question).then(res => {\r\n                this.$message.success('修改问题成功')\r\n                this.closeDialogForm()\r\n              }).catch(err => {\r\n                console.log(err)\r\n              })\r\n            } else {\r\n              save(this.question).then(res => {\r\n                this.$message.success('添加问题成功')\r\n                this.closeDialogForm()\r\n              }).catch(err => {\r\n                console.log(err)\r\n              })\r\n            }\r\n          } else {\r\n            this.$message.error('请填写正确的数据')\r\n          }\r\n        })\r\n      },\r\n      resetQuery: function() {\r\n        this.params.quContent = null\r\n        this.params.isPublish = null\r\n        this.queryList()\r\n      },\r\n      handleFind: function() {\r\n        this.params.pageNo = 1\r\n        this.queryList()\r\n      },\r\n      release: function(scope) {\r\n        let question = { id: scope.row.id, isPublish: 1 }\r\n        pubOrShelf(question).then(res => {\r\n          this.$message.success('发布问题成功')\r\n          this.queryList()\r\n        }).catch(err => {\r\n          console.log(err)\r\n        })\r\n      },\r\n      offShelf: function(scope) {\r\n        let question = { id: scope.row.id, isPublish: 0 }\r\n        pubOrShelf(question).then(res => {\r\n          this.$message.success('下架问题成功')\r\n          this.queryList()\r\n        }).catch(err => {\r\n          console.log(err)\r\n        })\r\n      },\r\n      handleTop: function(scope) {\r\n        let question = {\r\n          id: scope.row.id,\r\n          sort: scope.row.sort\r\n        }\r\n        top(question).then(res => {\r\n          if (question.sort === 1) {\r\n            this.$message.success('置顶问题成功')\r\n          } else {\r\n            this.$message.success('取消置顶成功')\r\n          }\r\n          this.queryList()\r\n        }).catch(err => {\r\n          console.log(err)\r\n        })\r\n      },\r\n      onClick: function(row) {\r\n        if (row.isPublish === 0) {\r\n          this.$message.error('问题暂未发布，无法进行浏览')\r\n          return false\r\n        }\r\n        window.open(this.BLOG_WEB_URL + 'questions/' + row.qCategoryId + '/' + row.id)\r\n      },\r\n      handleSelectionChange: function(val) {\r\n        this.multipleSelection = val\r\n      },\r\n      remove: function(scope) {\r\n        let id = scope.row.id\r\n        this.$confirm('此操作将把问题删除, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          remove(id).then(res => {\r\n            this.$message.success('删除问题成功')\r\n            this.queryList()\r\n          }).catch(err => {\r\n            console.log(err)\r\n          })\r\n        }).catch(() => {\r\n          this.$message.info('取消删除')\r\n        })\r\n\r\n      },\r\n      handleDelete: function() {\r\n        let ids = []\r\n        this.multipleSelection.forEach(item => {\r\n          ids.push(item.id)\r\n        })\r\n        this.$confirm('此操作将把问题删除, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          deleteBatch(ids).then(res => {\r\n            this.$message.success('批量删除问题成功')\r\n            this.queryList()\r\n          }).catch(err => {\r\n            console.log(err)\r\n          })\r\n        }).catch(() => {\r\n          this.$message.info('取消删除')\r\n        })\r\n\r\n      },\r\n      handleAdd: function() {\r\n        let question = sessionStorage.getItem('question')\r\n        if (question != null) {\r\n          this.$confirm('还有上次未完成的问题编辑，是否继续编辑?', '提示', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          }).then(() => {\r\n            this.initModel(JSON.parse(question))\r\n          }).catch(() => {\r\n            this.initModel(this.getFormObject())\r\n            sessionStorage.removeItem('question')\r\n          })\r\n        } else {\r\n          this.initModel(this.getFormObject())\r\n        }\r\n      },\r\n      initModel: function(question) {\r\n        this.question = question\r\n        if (this.question.id != null) {\r\n          this.beforeShow('修改问题', 1)\r\n        } else {\r\n          this.beforeShow('新增问题', 0)\r\n        }\r\n      },\r\n      handleUpdate: function(scope) {\r\n        info(scope.row.id).then(res => {\r\n          this.question = res.data\r\n          this.beforeShow('修改问题', 1)\r\n        })\r\n      },\r\n      getFormObject: function() {\r\n        return {\r\n          id: null,\r\n          quContent: '',\r\n          quantity: 0,\r\n          analysis: '',\r\n          analysisMd: '',\r\n          sort: 0,\r\n          qCategoryName: null,\r\n          isPublish: 1,\r\n        }\r\n      },\r\n      beforeShow: function(title, isEditForm) {\r\n        this.title = title\r\n        this.isEditForm = isEditForm\r\n        this.centerDialogVisible = true\r\n      },\r\n      closeDialogForm: function() {\r\n        this.centerDialogVisible = false\r\n        this.getCategoryList()\r\n        this.queryList()\r\n      },\r\n      handleSizeChange: function(val) {\r\n        this.params.pageSize = val\r\n        this.queryList()\r\n      },\r\n      handleCurrentChange: function(val) {\r\n        this.params.pageNo = val\r\n        this.queryList()\r\n      },\r\n      closeModel: function(done) {\r\n        if (this.question.quContent != null && this.question.quContent !== ''\r\n          && ((this.question.qCategoryName != null && this.question.qCategoryName !== ''))) {\r\n          this.$confirm('是否关闭博客编辑窗口', '提示', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          }).then(() => {\r\n            sessionStorage.setItem('question', JSON.stringify(this.question))\r\n            done()\r\n          }).catch(() => {\r\n            this.$message.info('已取消')\r\n          })\r\n        } else {\r\n          done()\r\n        }\r\n      },\r\n      imgAdd: function(pos, $file) {\r\n        var formdata = new FormData()\r\n        formdata.append('multipartFile', $file)\r\n        upload(formdata).then(res => {\r\n          this.$refs.md.$img2Url(pos, res.data)\r\n        }).catch(err => {\r\n          console.log(err)\r\n        })\r\n      },\r\n      imgDel: function(filename) {\r\n        delBatchFile(filename[0].split(this.img)[1])\r\n      },\r\n      dataFormat: function(time) {\r\n        return parseTime(time)\r\n      },\r\n      // 打开加载层\r\n      openLoading: function() {\r\n        this.loading = this.$loading({\r\n          lock: true,\r\n          text: '正在加载中~',\r\n          spinner: 'el-icon-loading',\r\n          background: 'rgba(0, 0, 0, 0.7)'\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n\r\n"]}]}