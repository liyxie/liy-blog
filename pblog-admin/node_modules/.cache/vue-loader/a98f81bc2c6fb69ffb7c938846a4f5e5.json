{"remainingRequest":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\src\\views\\system\\user.vue?vue&type=style&index=0&id=15e13bfe&lang=css&","dependencies":[{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\src\\views\\system\\user.vue","mtime":1721286706020},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":1721358891720},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1721358888723},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1721358888130},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1721358892040},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1721358887250}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmF2YXRhci11cGxvYWRlciAuZWwtdXBsb2FkIHsNCiAgYm9yZGVyOiAxcHggZGFzaGVkICNkOWQ5ZDk7DQogIGJvcmRlci1yYWRpdXM6IDZweDsNCiAgY3Vyc29yOiBwb2ludGVyOw0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogIG92ZXJmbG93OiBoaWRkZW47DQp9DQouYXZhdGFyLXVwbG9hZGVyIC5lbC11cGxvYWQ6aG92ZXIgew0KICBib3JkZXItY29sb3I6ICM0MDlFRkY7DQp9DQouYXZhdGFyLXVwbG9hZGVyLWljb24gew0KICBmb250LXNpemU6IDI4cHg7DQogIGNvbG9yOiAjOGM5MzlkOw0KICB3aWR0aDogMTc4cHg7DQogIGhlaWdodDogMTc4cHg7DQogIGxpbmUtaGVpZ2h0OiAxNzhweDsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KfQ0KLmF2YXRhciB7DQogIHdpZHRoOiAxNzhweDsNCiAgaGVpZ2h0OiAxNzhweDsNCiAgZGlzcGxheTogYmxvY2s7DQp9DQo="},{"version":3,"sources":["user.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"user.vue","sourceRoot":"src/views/system","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <!-- 查询和其他操作 -->\r\n    <el-form v-show=\"showSearch\" :inline=\"true\" ref=\"form\" :model=\"params\" label-width=\"68px\">\r\n      <el-form-item label=\"用户名称\">\r\n        <el-input style=\"width: 200px\" size=\"small\" v-model=\"params.username\" placeholder=\"请输入用户名称\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"登录方式\">\r\n        <el-select style=\"width: 150px\" size=\"small\" v-model=\"params.loginType\" filterable clearable reserve-keyword\r\n                   @change='handleFind' placeholder=\"请选择登录方式\"\r\n        >\r\n          <el-option v-for=\"item in dictLoginTypeList\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"/>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"small\" @click=\"handleFind\">查找</el-button>\r\n        <el-button icon=\"el-icon-refresh\" size=\"small\" @click=\"resetQuery\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <el-row :gutter=\"10\" class=\"mb8\">\r\n      <el-col :span=\"1.5\">\r\n<!--        <el-button\r\n          v-if=\"canAdd\"\r\n          type=\"primary\"\r\n          icon=\"el-icon-plus\"\r\n          size=\"small\"\r\n          @click=\"handleCreate\"\r\n        >新增\r\n        </el-button>-->\r\n      </el-col> <el-col :span=\"1.5\">\r\n      <el-button\r\n        v-if=\"canDel\"\r\n        :disabled=\"!multipleSelection.length\"\r\n        type=\"danger\"\r\n        icon=\"el-icon-delete\"\r\n        size=\"small\"\r\n        @click=\"handleDelete\"\r\n      >批量删除\r\n      </el-button>\r\n    </el-col>\r\n      <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"fetchUser\"></right-toolbar>\r\n    </el-row>\r\n\r\n    <div style=\"margin-top: 5px\">\r\n      <el-table border :data=\"userData\" fit style=\"width: 100%\" @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" align=\"center\"/>\r\n        <el-table-column prop=\"avatar\" align=\"center\" width=\"100\" label=\"头像\">\r\n          <template slot-scope=\"scope\">\r\n            <img :src=\"scope.row.avatar\" width=\"60\" height=\"60\" />\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"nickname\" width=\"150px\" align=\"center\" label=\"昵称\"/>\r\n        <el-table-column prop=\"loginType\" align=\"center\" label=\"登录方式\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag v-for=\"item in dictLoginTypeList\" v-if=\"scope.row.loginType === parseInt(item.value)\" :type=\"item.style\">\r\n              {{item.label}}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column align=\"center\" label=\"用户角色\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag v-for=\"item in roleList\" v-if=\"scope.row.roleId === item.id\">\r\n              {{item.name}}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"ipAddress\" width=\"130px\" align=\"center\" label=\"登录IP\"/>\r\n        <el-table-column prop=\"ipSource\" width=\"150px\" align=\"center\" label=\"登录地址\"/>\r\n        <el-table-column prop=\"createTime\" align=\"center\" width=\"180\" label=\"创建时间\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{formatTime(scope.row.createTime)}}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column align=\"center\" width=\"180\" label=\"最后登录时间\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{formatTime(scope.row.lastLoginTime)}}</span>\r\n          </template>\r\n        </el-table-column>\r\n<!--        <el-table-column align=\"center\" label=\"状态\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{statusOptions[scope.row.status]}}</span>\r\n          </template>\r\n        </el-table-column>-->\r\n        <el-table-column align=\"center\" label=\"操作\" width=\"150\" class-name=\"small-padding fixed-width\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button v-if=\"canUpdate\" type=\"primary\"  size=\"mini\" @click=\"handleUpdate(scope)\">编辑</el-button>\r\n            <el-button v-if=\"canDel\"  size=\"mini\"  type=\"danger\"\r\n                       @click=\"handleDelete(scope.row)\">删除\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n\r\n    <!--分页区域-->\r\n    <div class=\"pagination-container\" style=\"float: right;margin-bottom: 1.25rem;margin-top: 1.25rem;\">\r\n      <el-pagination background @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n                     :current-page=\"params.pageNo\" :page-size=\"params.pageSize\" :page-sizes=\"[10, 20, 30]\"\r\n                     layout=\"total, sizes,prev, pager, next,jumper\" :total=\"total\">\r\n      </el-pagination>\r\n    </div>\r\n\r\n    <el-dialog center :title=\"title\" :visible.sync=\"dialogFormVisible\">\r\n      <el-form :rules=\"rules\" ref=\"dataForm\" :model=\"form\">\r\n        <el-form-item prop=\"nickname\" label=\"昵称\" :label-width=\"formLabelWidth\">\r\n          <el-input disabled=\"true\" v-model=\"form.nickname\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"status\" label=\"状态\" :label-width=\"formLabelWidth\">\r\n          <div>\r\n            <el-radio v-for=\"(item,index) in statusOptions\" v-model=\"form.status\" :label=\"index\" border>{{item}}</el-radio>\r\n          </div>\r\n        </el-form-item>\r\n        <el-form-item prop=\"roleId\" label=\"角色\" :label-width=\"formLabelWidth\">\r\n          <div>\r\n            <el-radio v-for=\"item in roleList\" v-model=\"form.roleId\" :label=\"item.id\" border>{{item.name}}</el-radio>\r\n          </div>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"submit\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nimport {fetchUser,remove,create,update,info} from '@/api/user'\r\nimport {fetchRole} from '@/api/system'\r\nimport {parseTime} from '@/utils'\r\nimport { upload } from '@/api/imgUpload'\r\nimport {mapGetters} from \"vuex\";\r\nimport {hasAuth} from \"@/utils/auth\";\r\nimport {getDataByDictType} from \"@/api/dictData\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      formLabelWidth: '120px',\r\n      icon: false, //控制删除图标的显示\r\n      img:process.env.VUE_APP_IMG_API,\r\n      uploadPictureHost: process.env.VUE_APP_BASE_API + \"/file/upload\",\r\n      isEditForm:0,\r\n      sexColor:['success','warning'],\r\n      sexOptions:['男','女'],\r\n      statusOptions:['禁用','正常'],\r\n      dialogFormVisible: false,\r\n      showSearch: true,\r\n      isFirstPhotoVisible: true, // 图片选择器是否首次显示【用于懒加载】\r\n      photoVisible: false, //控制图片选择器的显示\r\n      photoList: [],\r\n      fileIds: \"\",\r\n      multipleSelection:[],\r\n      // 加载层信息\r\n      loading: [],\r\n      title:'',\r\n      dictLoginTypeList:[],\r\n      loginTypeDefaultValue:null,\r\n      total: 0,\r\n      files: {},\r\n      params:{\r\n        pageNo:1,\r\n        pageSize:10,\r\n        username:null,\r\n        loginType:null\r\n      },\r\n      roleList:[],\r\n      form:{},\r\n      userData: [],\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入账号', trigger: 'blur' },\r\n          {min: 1, max: 20, message: '长度在1到20个字符'},\r\n        ],\r\n        nickname: [\r\n          { required: true, message: '请输入昵称', trigger: 'blur' },\r\n          {min: 1, max: 20, message: '长度在1到20个字符'},\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n        ],\r\n        status: [\r\n          { required: true, message: '请选择状态', trigger: 'change' },\r\n        ],\r\n        roleId: [\r\n          { required: true, message: '请选择角色', trigger: 'change' },\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  computed:{\r\n    ...mapGetters([\r\n      'pres'\r\n    ]),\r\n    canAdd: function () {\r\n      return hasAuth(this.pres, '/system/user/create')\r\n    },\r\n    canDel: function () {\r\n      return hasAuth(this.pres, '/system/user/remove')\r\n    },\r\n    canUpdate: function () {\r\n      return hasAuth(this.pres, '/system/user/update')\r\n    },\r\n  },\r\n  created(){\r\n    this.openLoading();\r\n    this.getDictList()\r\n    this.fetchRole()\r\n    this.fetchUser()\r\n  },\r\n  methods: {\r\n    getDictList: function () {\r\n      let dictTypes = ['sys_login_method'];\r\n      getDataByDictType(dictTypes).then(response => {\r\n        let dictMap = response.data;\r\n        this.dictLoginTypeList = dictMap.sys_login_method.list\r\n        this.loginTypeDefaultValue = dictMap.sys_login_method.defaultValue\r\n      }).catch(err => {\r\n        console.error(err)\r\n      })\r\n    },\r\n    fetchUser: function (){\r\n      fetchUser(this.params).then(res =>{\r\n        this.userData = res.data.records\r\n        this.total = res.data.total\r\n        this.loading.close();\r\n      }).catch(err =>{\r\n        console.error(err)\r\n      })\r\n    },\r\n    fetchRole:function (){\r\n      fetchRole({pageNo:0,pageSize:10}).then(res =>{\r\n        this.roleList = res.data.records\r\n      })\r\n    },\r\n    resetQuery: function (){\r\n      this.params.username = null\r\n      this.fetchUser()\r\n    },\r\n    handleFind: function (){\r\n      this.params.pageNo =1\r\n      this.fetchUser()\r\n    },\r\n    handleCreate: function (){\r\n      this.form = this.getFormObject()\r\n      this.beforeShow(\"添加用户\",0)\r\n    },\r\n    handleUpdate: function (scope){\r\n      info(scope.row.id).then(res =>{\r\n        this.form = res.data\r\n      })\r\n      this.beforeShow(\"修改用户\",1)\r\n      this.$nextTick(() => {\r\n        this.$refs['dataForm'].clearValidate()\r\n      })\r\n    },\r\n    getFormObject: function (){\r\n      return{\r\n        id:null,\r\n        username:'',\r\n        password:'',\r\n        nickname:'',\r\n        avatar:'',\r\n        roleId:'',\r\n        status:1,\r\n        pwd:'',\r\n        sex:0,\r\n        email:''\r\n      }\r\n    },\r\n    beforeShow: function (title,isEditForm){\r\n      this.title=title\r\n      this.isEditForm = isEditForm\r\n      this.dialogFormVisible = true\r\n    },\r\n    submit: function (){\r\n      this.$refs['dataForm'].validate((valid) => {\r\n        if (valid){\r\n          if (this.isEditForm){\r\n            update(this.form).then(res =>{\r\n              this.$message.success(\"修改成功\")\r\n              this.fetchUser()\r\n              this.close()\r\n            }).catch(err =>{\r\n              console.error(err)\r\n            })\r\n          }else {\r\n            create(this.form).then(res =>{\r\n              this.$message.success(\"添加成功\")\r\n              this.userData.unshift(res.data)\r\n              this.close()\r\n            }).catch(err =>{\r\n              console.error(err)\r\n            })\r\n          }\r\n\r\n        }else {\r\n          console.log('error submit!!');\r\n          return false;\r\n        }\r\n      })\r\n    },\r\n    handleDelete: function (row){\r\n      this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        let ids =[]\r\n        if (row != null){\r\n          ids.push(row.id)\r\n        }else {\r\n          this.multipleSelection.forEach(item =>{\r\n            ids.push(item.id)\r\n          })\r\n        }\r\n        remove(ids).then(res => {\r\n          this.$message.success(\"删除用户成功\")\r\n          this.fetchUser()\r\n        }).catch(err => {\r\n          console.log(err)\r\n        })\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '取消删除'\r\n        })\r\n      })\r\n    },\r\n    handleSizeChange: function (val) {\r\n      this.params.pageSize = val\r\n      this.fetchUser()\r\n    },\r\n    handleCurrentChange: function (val) {\r\n      this.params.pageNo = val\r\n      this.fetchUser()\r\n    },\r\n    close(){\r\n      this.dialogFormVisible = false;\r\n      this.form={}\r\n    },\r\n    handleClose: function (done) {\r\n      done();\r\n    },\r\n    formatTime: function (time){\r\n      return parseTime(time)\r\n    },\r\n    //关闭模态框\r\n    cancelModel() {\r\n      this.photoVisible = false;\r\n    },\r\n    getChooseData(data) {\r\n      var that = this;\r\n      this.photoVisible = false;\r\n      this.photoList = data.photoList;\r\n      if (this.photoList.length >= 1) {\r\n        this.form.avatar = this.photoList[0];\r\n      }\r\n    },\r\n    deletePhoto: function () {\r\n      this.form.avatar = null\r\n    },\r\n    checkPhoto: function() {\r\n      this.photoList = [];\r\n      this.fileIds = \"\";\r\n      this.photoVisible = true;\r\n      this.isFirstPhotoVisible = false\r\n    },\r\n    uploadBefore: function (){\r\n      this.openLoading()\r\n    },\r\n    uploadSectionFile: function (param) {\r\n      let file = param.file\r\n      this.files = file\r\n      // FormData 对象\r\n      var formData = new FormData()\r\n      // 文件对象\r\n      formData.append('multipartFile', this.files)\r\n      upload(formData).then(res => {\r\n        this.form.avatar = res.data\r\n        this.loading.close()\r\n      })\r\n    },\r\n    handleSelectionChange: function (val) {\r\n      this.multipleSelection = val;\r\n    },\r\n    // 打开加载层\r\n    openLoading: function () {\r\n      this.loading = this.$loading({\r\n        lock: true,\r\n        text: \"正在加载中~\",\r\n        spinner: \"el-icon-loading\",\r\n        background: \"rgba(0, 0, 0, 0.7)\"\r\n      });\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  line-height: 178px;\r\n  text-align: center;\r\n}\r\n.avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n</style>\r\n"]}]}