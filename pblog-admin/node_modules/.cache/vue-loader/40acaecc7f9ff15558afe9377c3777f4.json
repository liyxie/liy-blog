{"remainingRequest":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\src\\views\\listener\\quartz\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\src\\views\\listener\\quartz\\index.vue","mtime":1721286706005},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1721358892040},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1721358892834},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1721358892040},{"path":"E:\\MyWenJian\\Blogs\\rulin-blog\\pblog-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1721358887250}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/views/listener/quartz","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-form :model=\"params\" ref=\"queryForm\" :inline=\"true\" v-show=\"showSearch\" label-width=\"68px\">\r\n      <el-form-item label=\"任务名称\" prop=\"jobName\">\r\n        <el-input\r\n          v-model=\"params.jobName\"\r\n          placeholder=\"请输入任务名称\"\r\n          clearable\r\n          size=\"small\"\r\n          @keyup.enter.native=\"handleFind\"\r\n        />\r\n      </el-form-item>\r\n      <el-form-item label=\"任务组名\" prop=\"jobGroup\">\r\n        <el-select @change=\"handleFind\" v-model=\"params.jobGroup\" placeholder=\"请选择任务组名\" clearable size=\"small\">\r\n          <el-option\r\n            v-for=\"dict in jobDictList\"\r\n            :key=\"dict.value\"\r\n            :label=\"dict.label\"\r\n            :value=\"dict.value\"\r\n          />\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"任务状态\" prop=\"status\">\r\n        <el-select @change=\"handleFind\" v-model=\"params.status\" placeholder=\"请选择任务状态\" clearable size=\"small\">\r\n          <el-option\r\n            v-for=\"dict in jobStatusList\"\r\n            :key=\"dict.value\"\r\n            :label=\"dict.label\"\r\n            :value=\"dict.value\"\r\n          />\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleFind\">搜索</el-button>\r\n        <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n    <el-row :gutter=\"10\" class=\"mb8\">\r\n      <el-col :span=\"1.5\">\r\n        <el-button\r\n          v-if=\"canAdd\"\r\n          type=\"primary\"\r\n          icon=\"el-icon-plus\"\r\n          size=\"mini\"\r\n          @click=\"handleCreate\"\r\n        >新增</el-button>\r\n      </el-col>\r\n      <el-col :span=\"1.5\">\r\n        <el-button\r\n          type=\"info\"\r\n          icon=\"el-icon-s-operation\"\r\n          size=\"mini\"\r\n          @click=\"handleJobLog\"\r\n        >日志</el-button>\r\n      </el-col>\r\n      <el-col :span=\"1.5\">\r\n        <el-button\r\n          :disabled=\"!multipleSelection.length\"\r\n          v-if=\"canDeleteBatch\"\r\n          type=\"danger\"\r\n          icon=\"el-icon-delete\"\r\n          size=\"mini\"\r\n          @click=\"handleDelete\"\r\n        >批量删除</el-button>\r\n      </el-col>\r\n      <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"fetchJobs\"></right-toolbar>\r\n    </el-row>\r\n\r\n    <div style=\"margin-top: 5px\">\r\n        <el-table border style=\"width: 100%\" :data=\"tableData\" @selection-change=\"handleSelectionChange\">\r\n          <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\r\n          <el-table-column label=\"任务名称\" width=\"160\" align=\"center\" prop=\"jobName\" :show-overflow-tooltip=\"true\" />\r\n          <el-table-column label=\"任务组名\" align=\"center\" prop=\"jobGroup\">\r\n            <template slot-scope=\"scope\">\r\n              <el-tag v-for=\"dict in jobDictList\" v-if=\"dict.value === scope.row.jobGroup\" :type=\"dict.style\">\r\n                {{dict.label}}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"调用目标字符串\" align=\"center\" prop=\"invokeTarget\" :show-overflow-tooltip=\"true\" />\r\n          <el-table-column label=\"cron执行表达式\" align=\"center\" prop=\"cronExpression\" :show-overflow-tooltip=\"true\" />\r\n          <el-table-column label=\"状态\" align=\"center\">\r\n            <template slot-scope=\"scope\">\r\n              <el-switch\r\n                v-model=\"scope.row.status\"\r\n                active-value=\"0\"\r\n                inactive-value=\"1\"\r\n                @change=\"handleStatusChange(scope)\"\r\n              ></el-switch>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"创建者\" prop=\"createBy\" align=\"center\" />\r\n          <el-table-column label=\"创建时间\" align=\"center\" width=\"160\">\r\n            <template slot-scope=\"scope\">\r\n              {{dataFormat(scope.row.createTime)}}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button v-if=\"canUpdate\" size=\"mini\" type=\"text\" @click=\"handleEdit(scope)\">修改</el-button>\r\n              <el-button v-if=\"canDel\" size=\"mini\" type=\"text\" @click=\"remove(scope)\">删除</el-button>\r\n              <el-dropdown v-if=\"canUpdate\" size=\"mini\" @command=\"(command) => handleCommand(command, scope.row)\" >\r\n                <el-button\r\n                  size=\"mini\"\r\n                  type=\"text\"\r\n                  style=\"margin-left: 9px\"\r\n                >更多</el-button>\r\n                <el-dropdown-menu slot=\"dropdown\">\r\n                  <el-dropdown-item command=\"handleRun\" icon=\"el-icon-caret-right\"\r\n                  >执行一次</el-dropdown-item>\r\n                  <el-dropdown-item command=\"handleView\" icon=\"el-icon-view\"\r\n                  >任务详细</el-dropdown-item>\r\n                  <el-dropdown-item command=\"handleJobLog\" icon=\"el-icon-s-operation\"\r\n                  >调度日志</el-dropdown-item>\r\n                </el-dropdown-menu>\r\n              </el-dropdown>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n\r\n    <!--分页区域-->\r\n    <div class=\"pagination-container\" style=\"float: right;margin-bottom: 1.25rem;margin-top: 1.25rem;\">\r\n      <el-pagination background @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n                     :current-page=\"params.pageNo\" :page-size=\"params.pageSize\" :page-sizes=\"[10, 20, 30]\"\r\n                     layout=\"total, sizes,prev, pager, next,jumper\" :total=\"total\">\r\n      </el-pagination>\r\n    </div>\r\n\r\n    <!-- 添加或修改定时任务对话框 -->\r\n    <el-dialog :title=\"title\" :visible.sync=\"dialogFormVisible\" width=\"800px\" append-to-body>\r\n      <el-form ref=\"dataForm\" :model=\"job\" :rules=\"rules\" label-width=\"120px\">\r\n        <el-row>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"任务名称\" prop=\"jobName\">\r\n              <el-input v-model=\"job.jobName\" placeholder=\"请输入任务名称\" />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"任务分组\" prop=\"jobGroup\">\r\n              <el-select v-model=\"job.jobGroup\" placeholder=\"请选择\">\r\n                <el-option\r\n                  v-for=\"dict in jobDictList\"\r\n                  :key=\"dict.value\"\r\n                  :label=\"dict.label\"\r\n                  :value=\"dict.value\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"24\">\r\n            <el-form-item prop=\"invokeTarget\">\r\n              <span slot=\"label\">\r\n                调用方法\r\n                <el-tooltip placement=\"top\">\r\n                  <div slot=\"content\">\r\n                    Bean调用示例：blogQuartz.blogParams('blog')\r\n                    <br />Class类调用示例：com.rulin.quartz.BlogQuartz.blogParams('blog')\r\n                    <br />参数说明：支持字符串，布尔类型，长整型，浮点型，整型\r\n                  </div>\r\n                  <i class=\"el-icon-question\"></i>\r\n                </el-tooltip>\r\n              </span>\r\n              <el-input v-model=\"job.invokeTarget\" placeholder=\"请输入调用目标字符串\" />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"24\">\r\n            <el-form-item label=\"cron表达式\" prop=\"cronExpression\">\r\n              <el-input v-model=\"job.cronExpression\" placeholder=\"请输入cron执行表达式\">\r\n                <template slot=\"append\">\r\n                  <el-button type=\"primary\" @click=\"handleShowCron\">\r\n                    生成表达式\r\n                    <i class=\"el-icon-time el-icon--right\"></i>\r\n                  </el-button>\r\n                </template>\r\n              </el-input>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"24\">\r\n            <el-form-item label=\"错误策略\" prop=\"misfirePolicy\">\r\n              <el-radio-group  v-model=\"job.misfirePolicy\" size=\"small\">\r\n                <el-radio-button v-for=\"item in jobMisfireList\" :key=\"item.value\" :label=\"item.value\">{{item.label}}</el-radio-button>\r\n              </el-radio-group>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"是否并发\" prop=\"concurrent\">\r\n              <el-radio-group v-model=\"job.concurrent\" size=\"small\">\r\n                <el-radio-button label=\"0\">允许</el-radio-button>\r\n                <el-radio-button label=\"1\">禁止</el-radio-button>\r\n              </el-radio-group>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"状态\">\r\n              <el-radio-group v-model=\"job.status\">\r\n                <el-radio\r\n                  v-for=\"dict in jobStatusList\"\r\n                  :key=\"dict.value\"\r\n                  :label=\"dict.value\"\r\n                >{{dict.label}}</el-radio>\r\n              </el-radio-group>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"submit\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"Cron表达式生成器\" :visible.sync=\"openCron\" append-to-body destroy-on-close class=\"scrollbar\">\r\n      <crontab @hide=\"openCron=false\" @fill=\"crontabFill\" :expression=\"expression\"></crontab>\r\n    </el-dialog>\r\n\r\n    <!-- 任务日志详细 -->\r\n    <el-dialog title=\"任务详细\" :visible.sync=\"openView\" width=\"700px\" append-to-body>\r\n      <el-form ref=\"form\" :model=\"job\" label-width=\"120px\" size=\"mini\">\r\n        <el-row>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"任务编号：\">{{ job.jobId }}</el-form-item>\r\n            <el-form-item label=\"任务名称：\">{{ job.jobName }}</el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item v-for=\"item in jobDictList\" v-if=\"item.value === job.jobGroup\" label=\"任务分组：\">\r\n              {{item.label}}\r\n            </el-form-item>\r\n            <el-form-item label=\"创建时间：\">{{ dataFormat(job.createTime) }}</el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"cron表达式：\">{{ job.cronExpression }}</el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"下次执行时间：\">{{ dataFormat(job.nextValidTime) }}</el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"24\">\r\n            <el-form-item label=\"调用目标方法：\">{{ job.invokeTarget }}</el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"任务状态：\">\r\n              <div v-for=\"item in jobStatusList\" v-if=\"job.status === item.value\">{{item.label}}</div>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"是否并发：\">\r\n              <div v-if=\"job.concurrent === '0'\">允许</div>\r\n              <div v-else-if=\"job.concurrent === '1'\">禁止</div>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"执行策略：\">\r\n              <div v-for=\"item in jobMisfireList\" v-if=\"job.misfirePolicy === item.value\">\r\n                {{item.label}}\r\n              </div>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"openView = false\">关 闭</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n\r\n</template>\r\n<script>\r\nimport {fetchList, add, update, info, remove,change, run, deleteBatch} from '@/api/quartz'\r\nimport {getDataByDictType} from \"@/api/dictData\"\r\nimport Crontab from '@/components/Crontab'\r\nimport {parseTime} from '@/utils'\r\nimport {hasAuth} from '@/utils/auth'\r\nimport {mapGetters} from 'vuex'\r\nexport default {\r\n  components: { Crontab },\r\n  data() {\r\n    return {\r\n      // 加载层信息\r\n      loading: [],\r\n      tableData: [],\r\n      dialogFormVisible: false,\r\n      openView: false,\r\n      showSearch: true,\r\n      jobDictList:[],\r\n      jobStatusList:[],\r\n      jobMisfireList:[],\r\n      jobDictDefaultValue: null,\r\n      jobStatusDefaultValue: null,\r\n      jobMisfireDefaultValue: null,\r\n      isEditForm: 0,\r\n      // 是否显示Cron表达式弹出层\r\n      openCron: false,\r\n      // 传入的表达式\r\n      expression: \"\",\r\n      total: null,\r\n      multipleSelection:[],\r\n      title: null,\r\n      job: {},\r\n      params: {\r\n        jobName: null,\r\n        jobGroup: null,\r\n        status: null,\r\n        pageNo: 1,\r\n        pageSize: 10\r\n      },\r\n      rules:\r\n        {\r\n          jobName: [\r\n            { required: true, message: \"任务名称不能为空\", trigger: \"blur\" }\r\n          ],\r\n          invokeTarget: [\r\n            { required: true, message: \"调用目标字符串不能为空\", trigger: \"blur\" }\r\n          ],\r\n          cronExpression: [\r\n            { required: true, message: \"cron执行表达式不能为空\", trigger: \"blur\" }\r\n          ]\r\n        }\r\n    }\r\n  },\r\n  created() {\r\n    this.openLoading();\r\n    this.getDictList()\r\n    this.fetchJobs()\r\n  },\r\n  computed:{\r\n    ...mapGetters([\r\n      'pres'\r\n    ]),\r\n    canAdd: function() {\r\n      return hasAuth(this.pres, '/system/job/add')\r\n    },\r\n    canDel: function() {\r\n      return hasAuth(this.pres, '/system/job/delete')\r\n    },\r\n    canDeleteBatch: function() {\r\n      return hasAuth(this.pres, '/system/job/deleteBatch')\r\n    },\r\n    canUpdate: function() {\r\n      return hasAuth(this.pres, '/system/job/update')\r\n    },\r\n  },\r\n  methods: {\r\n    getDictList: function () {\r\n      let dictTypeList = ['sys_job_group','sys_job_status','sys_job_misfire']\r\n      getDataByDictType(dictTypeList).then(response => {\r\n        let dictMap = response.data;\r\n        this.jobDictList = dictMap.sys_job_group.list\r\n        this.jobStatusList = dictMap.sys_job_status.list\r\n        this.jobMisfireList = dictMap.sys_job_misfire.list\r\n        this.jobDictDefaultValue = dictMap.sys_job_group.defaultValue\r\n        this.jobStatusDefaultValue = dictMap.sys_job_status.defaultValue\r\n        this.jobMisfireDefaultValue = dictMap.sys_job_misfire.defaultValue\r\n      });\r\n    },\r\n    fetchJobs: function () {\r\n      fetchList(this.params).then(res => {\r\n        this.tableData = res.data.records\r\n        this.total = res.data.total\r\n        this.loading.close();\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n    },\r\n    submit: function (){\r\n      this.$refs['dataForm'].validate((valid) => {\r\n        if (valid) {\r\n          if (this.isEditForm){\r\n            update(this.job).then(res => {\r\n              this.$message.success(\"OK\")\r\n              this.fetchJobs()\r\n              this.closeDialogForm()\r\n            }).catch(err => {\r\n              console.error(err)\r\n            })\r\n          }else {\r\n            add(this.job).then(res => {\r\n              this.$message.success(\"OK\")\r\n              this.fetchJobs()\r\n              this.closeDialogForm()\r\n            }).catch(err => {\r\n              console.error(err)\r\n            })\r\n          }\r\n        }else {\r\n          console.error(\"no submit\")\r\n        }\r\n      })\r\n    },\r\n    remove: function (scope) {\r\n      this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        remove(scope.row.jobId).then(res => {\r\n          this.$message.success(\"OK\")\r\n          this.fetchJobs()\r\n        }).catch(err => {\r\n          console.error(err)\r\n        })\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '取消删除'\r\n        })\r\n      })\r\n\r\n    },\r\n    handleCreate: function () {\r\n      this.isEditForm = 0\r\n      this.job = this.getFormObject()\r\n      this.title = \"新增任务\"\r\n      this.dialogFormVisible = true\r\n      this.$nextTick(() => {\r\n        this.$refs['dataForm'].clearValidate()\r\n      })\r\n    },\r\n    handleEdit: function (scope) {\r\n      this.title = \"修改任务\"\r\n      info(scope.row.jobId).then(res => {\r\n        this.job = res.data\r\n        this.isEditForm = 1\r\n        this.dialogFormVisible = true\r\n        this.$nextTick(() => {\r\n          this.$refs['dataForm'].clearValidate()\r\n        })\r\n      })\r\n    },\r\n    getFormObject: function (){\r\n      return {\r\n        jobName: '',\r\n        jobGroup: this.jobDictDefaultValue,\r\n        invokeTarget: '',\r\n        cronExpression: '',\r\n        misfirePolicy: this.jobMisfireDefaultValue,\r\n        concurrent: 1,\r\n        status: this.jobStatusDefaultValue,\r\n        remark: this.jobStatusDefaultValue\r\n      }\r\n    },\r\n    /** cron表达式按钮操作 */\r\n    handleShowCron() {\r\n      this.expression = this.job.cronExpression;\r\n      this.openCron = true;\r\n    },\r\n    /** 确定后回传值 */\r\n    crontabFill(value) {\r\n      this.job.cronExpression = value;\r\n    },\r\n    resetQuery: function (){\r\n      this.params.jobName=null\r\n      this.params.jobGroup=null\r\n      this.params.status=null\r\n      this.fetchJobs()\r\n    },\r\n    handleFind: function (){\r\n      this.params.pageNo=1;\r\n      this.fetchJobs()\r\n    },\r\n    // 更多操作触发\r\n    handleCommand(command, row) {\r\n      switch (command) {\r\n        case \"handleRun\":\r\n          this.handleRun(row);\r\n          break;\r\n        case \"handleView\":\r\n          this.handleView(row);\r\n          break;\r\n        case \"handleJobLog\":\r\n          this.handleJobLog(row);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n    /* 立即执行一次 */\r\n    handleRun: function (row) {\r\n      this.$confirm('确认要立即执行一次\"' + row.jobName + '\"任务吗？').then(function() {\r\n        return run(row);\r\n      }).then(() => {\r\n        this.$message.success(\"执行成功\");\r\n      }).catch(err => {\r\n        this.$message.error(err)\r\n      });\r\n    },\r\n    /* 立即执行一次 */\r\n    handleView: function (row) {\r\n      info(row.jobId).then(response => {\r\n        this.job = response.data;\r\n        this.openView = true;\r\n      });\r\n    },\r\n    /** 任务日志列表查询 */\r\n    handleJobLog: function (row) {\r\n      const jobId = row.jobId || null;\r\n      this.$router.push({ path: '/jobLog', query: { jobId: jobId } })\r\n    },\r\n    handleStatusChange: function (scope){\r\n      change(scope.row).then(res =>{\r\n        this.$message.success(\"OK\")\r\n      }).catch(err =>{\r\n        console.error(err)\r\n      })\r\n    },\r\n    handleDelete: function (){\r\n      if (!this.multipleSelection.length){\r\n        this.$message.error(\"请选择要删除的标签\")\r\n        return false\r\n      }\r\n      this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        deleteBatch(this.multipleSelection).then(res => {\r\n          this.$message.success(\"OK\")\r\n          this.fetchJobs()\r\n        }).catch(err => {\r\n          console.error(err)\r\n        })\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '取消删除'\r\n        })\r\n      })\r\n    },\r\n    closeDialogForm: function () {\r\n      this.tag = {}\r\n      this.dialogFormVisible = false\r\n    },\r\n    handleSizeChange: function (val) {\r\n      this.params.pageSize = val\r\n      this.fetchJobs()\r\n    },\r\n    handleCurrentChange: function (val) {\r\n      this.params.pageNo = val\r\n      this.fetchJobs()\r\n    },\r\n    handleSelectionChange: function(val) {\r\n      this.multipleSelection = val.map(item => item.jobId);\r\n    },\r\n    // 打开加载层\r\n    openLoading() {\r\n      this.loading = this.$loading({\r\n        lock: true,\r\n        text: \"正在加载中~\",\r\n        spinner: \"el-icon-loading\",\r\n        background: \"rgba(0, 0, 0, 0.7)\"\r\n      });\r\n    },\r\n    dataFormat: function(time){\r\n      return parseTime(time)\r\n    },\r\n  }\r\n}\r\n</script>\r\n"]}]}